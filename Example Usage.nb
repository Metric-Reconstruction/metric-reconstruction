(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    211311,       4491]
NotebookOptionsPosition[    207805,       4424]
NotebookOutlinePosition[    208242,       4441]
CellTagsIndexPosition[    208199,       4438]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\<\
This is the third of three notebooks which accompany the paper \
\[OpenCurlyDoubleQuote]Gravitational Waves on Kerr Black Holes I: \
Reconstruction of Linearized Metric Perturbations\[CloseCurlyDoubleQuote] \
(https://arxiv.org/abs/2403.20311). This notebook imports the results of \
Metric Perturbation.nb and shows how to numerically plot a component of a \
metric perturbation.\
\>", "Text",
 CellChangeTimes->{{3.923064908517233*^9, 3.92306514471902*^9}, {
  3.923070209761281*^9, 3.923070240515483*^9}, {3.923077775299848*^9, 
  3.9230777758471317`*^9}, {3.923123975327033*^9, 3.9231239754923353`*^9}, {
  3.923127379268166*^9, 
  3.923127405326394*^9}},ExpressionUUID->"88c38988-f73d-4a8a-9232-\
dd759baad4fc"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"<<", "SpinWeightedSpheroidalHarmonics`"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"<<", "Notation`"}], "\n", 
 RowBox[{
  RowBox[{"Symbolize", "[", 
   RowBox[{"ParsedBoxWrapper", "[", 
    RowBox[{"SubscriptBox", "[", 
     RowBox[{"\"\<_\>\"", ",", "\"\<_\>\""}], "]"}], "]"}], "]"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Set", " ", "the", " ", "working", " ", "directory", " ", "to", " ", 
    "this", " ", 
    RowBox[{"notebook", "'"}], "s", " ", "path", " ", "to", " ", "make", " ", 
    "importing", " ", "and", " ", "exporting", " ", "notebook", " ", 
    RowBox[{"relative", "."}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SetDirectory", "@", 
    RowBox[{"NotebookDirectory", "[", "]"}]}], ";"}], " "}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.9230859134726353`*^9, 3.923085914384721*^9}, {
  3.923086377321217*^9, 3.9230863793238163`*^9}, {3.9231227318657513`*^9, 
  3.923122758281817*^9}, {3.923129688201826*^9, 3.9231296924389677`*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"a7621c5e-04f6-44df-becc-cf76a5d1ef2d"],

Cell[CellGroupData[{

Cell["1. Setup and Definitions", "Section",
 CellChangeTimes->{{3.923129133168068*^9, 
  3.9231291500345182`*^9}},ExpressionUUID->"728999bc-eba0-4fe4-825f-\
f7bb13e2ecee"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"$Assumptions", " ", "=", " ", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"0", " ", "<", " ", "a", " ", "<", " ", "M"}], ",", " ", 
      "\[IndentingNewLine]", 
      RowBox[{"0", " ", "<", 
       RowBox[{"M", "+", 
        RowBox[{"Sqrt", "[", 
         RowBox[{
          SuperscriptBox["M", "2"], "-", 
          SuperscriptBox["a", "2"]}], "]"}]}], "<", " ", "r"}], ",", " ", 
      "\[IndentingNewLine]", 
      RowBox[{"Element", "[", 
       RowBox[{"\[Theta]", ",", " ", "Reals"}], "]"}], ",", " ", 
      "\[IndentingNewLine]", 
      RowBox[{"Element", "[", 
       RowBox[{"t", ",", " ", "Reals"}], "]"}], ",", " ", 
      "\[IndentingNewLine]", 
      RowBox[{"Element", "[", 
       RowBox[{"\[Phi]", ",", " ", "Reals"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Element", "[", 
       RowBox[{"m", ",", "Integers"}], "]"}]}], "\[IndentingNewLine]", 
     "}"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"coord", "=", 
    RowBox[{"{", 
     RowBox[{"t", ",", "r", ",", "\[Theta]", ",", "\[Phi]"}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalDelta]", "=", 
   RowBox[{
    SuperscriptBox["r", "2"], "-", 
    RowBox[{"2", "M", "*", "r"}], "+", 
    SuperscriptBox["a", "2"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalSigma]", "=", 
   RowBox[{
    SuperscriptBox["r", "2"], "+", 
    RowBox[{
     SuperscriptBox["a", "2"], "*", 
     SuperscriptBox[
      RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Zeta]", "=", 
   RowBox[{"r", "-", 
    RowBox[{"I", "*", "a", "*", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Zeta]bar", "=", 
   RowBox[{"r", "+", 
    RowBox[{"I", "*", "a", "*", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Omega]sub", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Conjugate", "[", "\[Omega]", "]"}], "->", "\[Omega]bar"}], ",", 
     RowBox[{
      RowBox[{"Conjugate", "[", "\[Omega]bar", "]"}], "->", "\[Omega]"}]}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"K", "[", 
    RowBox[{"\[Omega]_", ",", "m_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["r", "2"], "+", 
       SuperscriptBox["a", "2"]}], ")"}], "*", "\[Omega]"}], "-", 
    RowBox[{"a", "*", "m"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Kbar", "[", 
    RowBox[{"\[Omega]_", ",", "m_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["r", "2"], "+", 
       SuperscriptBox["a", "2"]}], ")"}], "*", 
     RowBox[{"Conjugate", "[", "\[Omega]", "]"}]}], "-", 
    RowBox[{"a", "*", "m"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Q", "[", 
    RowBox[{"\[Omega]_", ",", "m_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "a"}], "*", "\[Omega]", "*", 
     RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
    RowBox[{"m", "*", 
     RowBox[{"Csc", "[", "\[Theta]", "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Qbar", "[", 
    RowBox[{"\[Omega]_", ",", "m_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "a"}], "*", 
     RowBox[{"Conjugate", "[", "\[Omega]", "]"}], "*", 
     RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
    RowBox[{"m", "*", 
     RowBox[{"Csc", "[", "\[Theta]", "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gBL", "=", 
   RowBox[{
    RowBox[{"-", "\[Epsilon]g"}], "*", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", 
          FractionBox[
           RowBox[{"2", "M", "*", "r"}], "\[CapitalSigma]"]}], ")"}], ",", 
        "0", ",", "0", ",", 
        FractionBox[
         RowBox[{"a", "*", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], "*", 
          RowBox[{"(", 
           RowBox[{"2", "M", "*", "r"}], ")"}]}], "\[CapitalSigma]"]}], "}"}],
       ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"-", 
         FractionBox["\[CapitalSigma]", "\[CapitalDelta]"]}], ",", "0", ",", 
        "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", 
        RowBox[{"-", "\[CapitalSigma]"}], ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        FractionBox[
         RowBox[{"a", "*", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], "*", 
          RowBox[{"(", 
           RowBox[{"2", "M", "*", "r"}], ")"}]}], "\[CapitalSigma]"], ",", 
        "0", ",", "0", ",", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox["r", "2"], "+", 
                SuperscriptBox["a", "2"]}], ")"}], "2"], "-", 
             RowBox[{"\[CapitalDelta]", "*", 
              SuperscriptBox["a", "2"], "*", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], 
            "\[CapitalSigma]"], ")"}]}], "*", 
         SuperscriptBox[
          RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], "}"}]}], "}"}]}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lupBL", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       SuperscriptBox["r", "2"], "+", 
       SuperscriptBox["a", "2"]}], "\[CapitalDelta]"], ",", "1", ",", "0", 
     ",", 
     FractionBox["a", "\[CapitalDelta]"]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"nupBL", " ", "=", " ", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"2", "*", "\[CapitalSigma]"}]], "*", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SuperscriptBox["r", "2"], "+", 
        SuperscriptBox["a", "2"]}], ",", 
       RowBox[{"-", "\[CapitalDelta]"}], ",", "0", ",", "a"}], "}"}]}]}], 
   ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"mupBL", " ", "=", " ", 
    RowBox[{
     FractionBox["1", 
      RowBox[{
       RowBox[{"Sqrt", "[", "2", "]"}], "*", "\[Zeta]bar"}]], "*", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"I", "*", "a", "*", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0", ",", "1", ",", 
       RowBox[{"I", "/", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}]}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mbarupBL", " ", "=", " ", 
   RowBox[{
    FractionBox["1", 
     RowBox[{
      RowBox[{"Sqrt", "[", "2", "]"}], "*", "\[Zeta]"}]], "*", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "I"}], "*", "a", "*", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0", ",", "1", ",", 
      RowBox[{
       RowBox[{"-", "I"}], "/", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ldownBL", "=", 
   RowBox[{
    RowBox[{"gBL", ".", "lupBL"}], "//", "Simplify"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ndownBL", "=", 
   RowBox[{
    RowBox[{"gBL", ".", "nupBL"}], "//", "Simplify"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mdownBL", "=", 
   RowBox[{
    RowBox[{"gBL", ".", "mupBL"}], "//", "Simplify"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mbardownBL", "=", 
   RowBox[{
    RowBox[{"gBL", ".", "mbarupBL"}], "//", "Simplify"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.9223138930189657`*^9, 3.922314024533633*^9}, {
   3.922314922709157*^9, 3.9223149725891743`*^9}, 3.922971490100031*^9, {
   3.922971815715439*^9, 3.922971846055562*^9}, {3.922973521137512*^9, 
   3.922973525398973*^9}, {3.9230867341127234`*^9, 3.923086734540209*^9}, {
   3.9230887408431*^9, 3.9230887475414133`*^9}, {3.9231282695049467`*^9, 
   3.923128270620722*^9}, {3.923129000477416*^9, 3.923129022612749*^9}, 
   3.923129948197775*^9},
 CellLabel->"In[5]:=",ExpressionUUID->"7a2f0ff3-925d-4309-99b5-504153ab1216"]
}, Open  ]],

Cell[CellGroupData[{

Cell["2. Radial and Angular Mode Functions", "Section",
 CellChangeTimes->{{3.923064269992003*^9, 3.9230642720446367`*^9}, {
  3.923070495811365*^9, 
  3.923070495883356*^9}},ExpressionUUID->"8d90ebca-ce7c-4a19-a808-\
a68fddc57939"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"R2", "[", 
     RowBox[{"\[Omega]", ",", "l", ",", "m", ",", "r"}], "]"}], ",", 
    RowBox[{"R2", "[", 
     RowBox[{
      RowBox[{"-", "\[Omega]bar"}], ",", "l", ",", 
      RowBox[{"-", "m"}], ",", "r"}], "]"}], ",", 
    RowBox[{"Rn2", "[", 
     RowBox[{"\[Omega]", ",", "l", ",", "m", ",", "r"}], "]"}], ",", 
    RowBox[{"Rn2", "[", 
     RowBox[{
      RowBox[{"-", "\[Omega]bar"}], ",", "l", ",", 
      RowBox[{"-", "m"}], ",", "r"}], "]"}], ",", 
    RowBox[{"R2bar", "[", 
     RowBox[{"\[Omega]", ",", "l", ",", "m", ",", "r"}], "]"}], ",", 
    RowBox[{"R2bar", "[", 
     RowBox[{
      RowBox[{"-", "\[Omega]bar"}], ",", "l", ",", 
      RowBox[{"-", "m"}], ",", "r"}], "]"}], ",", 
    RowBox[{"Rn2bar", "[", 
     RowBox[{"\[Omega]", ",", "l", ",", "m", ",", "r"}], "]"}], ",", 
    RowBox[{"Rn2bar", "[", 
     RowBox[{
      RowBox[{"-", "\[Omega]bar"}], ",", "l", ",", 
      RowBox[{"-", "m"}], ",", "r"}], "]"}]}], "}"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Rlist", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"{", 
     RowBox[{"%", ",", 
      RowBox[{"D", "[", 
       RowBox[{"%", ",", "r"}], "]"}], ",", 
      RowBox[{"D", "[", 
       RowBox[{"%", ",", 
        RowBox[{"{", 
         RowBox[{"r", ",", "2"}], "}"}]}], "]"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"S2", "[", 
     RowBox[{"\[Omega]", ",", "l", ",", "m", ",", "\[Theta]"}], "]"}], ",", 
    RowBox[{"S2", "[", 
     RowBox[{
      RowBox[{"-", "\[Omega]bar"}], ",", "l", ",", 
      RowBox[{"-", "m"}], ",", "\[Theta]"}], "]"}], ",", 
    RowBox[{"Sn2", "[", 
     RowBox[{"\[Omega]", ",", "l", ",", "m", ",", "\[Theta]"}], "]"}], ",", 
    RowBox[{"Sn2", "[", 
     RowBox[{
      RowBox[{"-", "\[Omega]bar"}], ",", "l", ",", 
      RowBox[{"-", "m"}], ",", "\[Theta]"}], "]"}], ",", 
    RowBox[{"S2bar", "[", 
     RowBox[{"\[Omega]", ",", "l", ",", "m", ",", "\[Theta]"}], "]"}], ",", 
    RowBox[{"S2bar", "[", 
     RowBox[{
      RowBox[{"-", "\[Omega]bar"}], ",", "l", ",", 
      RowBox[{"-", "m"}], ",", "\[Theta]"}], "]"}], ",", 
    RowBox[{"Sn2bar", "[", 
     RowBox[{"\[Omega]", ",", "l", ",", "m", ",", "\[Theta]"}], "]"}], ",", 
    RowBox[{"Sn2bar", "[", 
     RowBox[{
      RowBox[{"-", "\[Omega]bar"}], ",", "l", ",", 
      RowBox[{"-", "m"}], ",", "\[Theta]"}], "]"}]}], "}"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Slist", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"{", 
     RowBox[{"%", ",", 
      RowBox[{"D", "[", 
       RowBox[{"%", ",", "\[Theta]"}], "]"}], ",", 
      RowBox[{"D", "[", 
       RowBox[{"%", ",", 
        RowBox[{"{", 
         RowBox[{"\[Theta]", ",", "2"}], "}"}]}], "]"}]}], "}"}], "]"}]}], 
  ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.922369794419499*^9, 3.92236982446952*^9}, {
  3.923063586899446*^9, 3.923063593363496*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"5a254cd5-ac6e-4774-8b69-b59410b56597"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"eqR2", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox["\[CapitalDelta]", 
       RowBox[{"-", "s"}]], "*", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{
         SuperscriptBox["\[CapitalDelta]", 
          RowBox[{"s", "+", "1"}]], "*", 
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"R2", "[", 
            RowBox[{"\[Omega]", ",", "l", ",", "m", ",", "r"}], "]"}], ",", 
           "r"}], "]"}]}], ",", "r"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        FractionBox[
         RowBox[{
          SuperscriptBox[
           RowBox[{"K", "[", 
            RowBox[{"\[Omega]", ",", "m"}], "]"}], "2"], "-", 
          RowBox[{"2", "*", "I", "*", "s", "*", 
           RowBox[{"(", 
            RowBox[{"r", "-", "M"}], ")"}], "*", 
           RowBox[{"K", "[", 
            RowBox[{"\[Omega]", ",", "m"}], "]"}]}]}], "\[CapitalDelta]"], 
        "+", 
        RowBox[{"4", "*", "I", "*", "s", "*", "\[Omega]", "*", "r"}], "-", 
        RowBox[{"\[Lambda]2", "[", 
         RowBox[{"\[Omega]", ",", "l", ",", "m"}], "]"}]}], ")"}], "*", 
      RowBox[{"R2", "[", 
       RowBox[{"\[Omega]", ",", "l", ",", "m", ",", "r"}], "]"}]}]}], "/.", 
    RowBox[{"s", "->", "2"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eqS2", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[Theta]", "]"}], 
         RowBox[{"-", "1"}]]}], "*", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[Theta]", "]"}], 
              RowBox[{"-", "1"}]]}], "*", 
            RowBox[{"D", "[", 
             RowBox[{
              RowBox[{"S2", "[", 
               RowBox[{"\[Omega]", ",", "l", ",", "m", ",", "\[Theta]"}], 
               "]"}], ",", "\[Theta]"}], "]"}]}], ")"}]}], ",", "\[Theta]"}], 
        "]"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["a", "2"], "*", 
          SuperscriptBox["\[Omega]", "2"], "*", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "-", 
         FractionBox[
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"m", "+", 
             RowBox[{"s", "*", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}], "2"], 
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]], "-", 
         RowBox[{"2", "*", "a", "*", "s", "*", "\[Omega]", "*", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", "s", "+", "A"}], 
        ")"}], "*", 
       RowBox[{"S2", "[", 
        RowBox[{"\[Omega]", ",", "l", ",", "m", ",", "\[Theta]"}], "]"}]}]}], 
     "/.", 
     RowBox[{"s", "->", "2"}]}], "/.", 
    RowBox[{"A", "->", 
     RowBox[{
      RowBox[{"\[Lambda]2", "[", 
       RowBox[{"\[Omega]", ",", "l", ",", "m"}], "]"}], "+", 
      RowBox[{"2", "*", "a", "*", "m", "*", "\[Omega]"}], "-", 
      RowBox[{
       SuperscriptBox["a", "2"], "*", 
       SuperscriptBox["\[Omega]", "2"]}]}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eqRn2", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox["\[CapitalDelta]", 
       RowBox[{"-", "s"}]], "*", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{
         SuperscriptBox["\[CapitalDelta]", 
          RowBox[{"s", "+", "1"}]], "*", 
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"Rn2", "[", 
            RowBox[{"\[Omega]", ",", "l", ",", "m", ",", "r"}], "]"}], ",", 
           "r"}], "]"}]}], ",", "r"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        FractionBox[
         RowBox[{
          SuperscriptBox[
           RowBox[{"K", "[", 
            RowBox[{"\[Omega]", ",", "m"}], "]"}], "2"], "-", 
          RowBox[{"2", "*", "I", "*", "s", "*", 
           RowBox[{"(", 
            RowBox[{"r", "-", "M"}], ")"}], "*", 
           RowBox[{"K", "[", 
            RowBox[{"\[Omega]", ",", "m"}], "]"}]}]}], "\[CapitalDelta]"], 
        "+", 
        RowBox[{"4", "*", "I", "*", "s", "*", "\[Omega]", "*", "r"}], "-", 
        RowBox[{"\[Lambda]n2", "[", 
         RowBox[{"\[Omega]", ",", "l", ",", "m"}], "]"}]}], ")"}], "*", 
      RowBox[{"Rn2", "[", 
       RowBox[{"\[Omega]", ",", "l", ",", "m", ",", "r"}], "]"}]}]}], "/.", 
    RowBox[{"s", "->", 
     RowBox[{"-", "2"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eqSn2", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[Theta]", "]"}], 
         RowBox[{"-", "1"}]]}], "*", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[Theta]", "]"}], 
              RowBox[{"-", "1"}]]}], "*", 
            RowBox[{"D", "[", 
             RowBox[{
              RowBox[{"Sn2", "[", 
               RowBox[{"\[Omega]", ",", "l", ",", "m", ",", "\[Theta]"}], 
               "]"}], ",", "\[Theta]"}], "]"}]}], ")"}]}], ",", "\[Theta]"}], 
        "]"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["a", "2"], "*", 
          SuperscriptBox["\[Omega]", "2"], "*", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "-", 
         FractionBox[
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"m", "+", 
             RowBox[{"s", "*", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}], "2"], 
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]], "-", 
         RowBox[{"2", "*", "a", "*", "s", "*", "\[Omega]", "*", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", "s", "+", "A"}], 
        ")"}], "*", 
       RowBox[{"Sn2", "[", 
        RowBox[{"\[Omega]", ",", "l", ",", "m", ",", "\[Theta]"}], "]"}]}]}], 
     "/.", 
     RowBox[{"s", "->", 
      RowBox[{"-", "2"}]}]}], "/.", 
    RowBox[{"A", "->", 
     RowBox[{
      RowBox[{"\[Lambda]n2", "[", 
       RowBox[{"\[Omega]", ",", "l", ",", "m"}], "]"}], "+", 
      RowBox[{"2", "*", "a", "*", "m", "*", "\[Omega]"}], "-", 
      RowBox[{
       SuperscriptBox["a", "2"], "*", 
       SuperscriptBox["\[Omega]", "2"]}]}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eqR2bar", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox["\[CapitalDelta]", 
       RowBox[{"-", "s"}]], "*", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{
         SuperscriptBox["\[CapitalDelta]", 
          RowBox[{"s", "+", "1"}]], "*", 
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"R2bar", "[", 
            RowBox[{"\[Omega]", ",", "l", ",", "m", ",", "r"}], "]"}], ",", 
           "r"}], "]"}]}], ",", "r"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        FractionBox[
         RowBox[{
          SuperscriptBox[
           RowBox[{"Kbar", "[", 
            RowBox[{"\[Omega]", ",", "m"}], "]"}], "2"], "+", 
          RowBox[{"2", "*", "I", "*", "s", "*", 
           RowBox[{"(", 
            RowBox[{"r", "-", "M"}], ")"}], "*", 
           RowBox[{"Kbar", "[", 
            RowBox[{"\[Omega]", ",", "m"}], "]"}]}]}], "\[CapitalDelta]"], 
        "-", 
        RowBox[{"4", "*", "I", "*", "s", "*", "\[Omega]bar", "*", "r"}], "-", 
        
        RowBox[{"\[Lambda]2bar", "[", 
         RowBox[{"\[Omega]", ",", "l", ",", "m"}], "]"}]}], ")"}], "*", 
      RowBox[{"R2bar", "[", 
       RowBox[{"\[Omega]", ",", "l", ",", "m", ",", "r"}], "]"}]}]}], "/.", 
    RowBox[{"s", "->", "2"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eqS2bar", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[Theta]", "]"}], 
         RowBox[{"-", "1"}]]}], "*", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[Theta]", "]"}], 
              RowBox[{"-", "1"}]]}], "*", 
            RowBox[{"D", "[", 
             RowBox[{
              RowBox[{"S2bar", "[", 
               RowBox[{"\[Omega]", ",", "l", ",", "m", ",", "\[Theta]"}], 
               "]"}], ",", "\[Theta]"}], "]"}]}], ")"}]}], ",", "\[Theta]"}], 
        "]"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["a", "2"], "*", 
          SuperscriptBox["\[Omega]bar", "2"], "*", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "-", 
         FractionBox[
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"m", "+", 
             RowBox[{"s", "*", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}], "2"], 
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]], "-", 
         RowBox[{"2", "*", "a", "*", "s", "*", "\[Omega]bar", "*", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", "s", "+", "A"}], 
        ")"}], "*", 
       RowBox[{"S2bar", "[", 
        RowBox[{"\[Omega]", ",", "l", ",", "m", ",", "\[Theta]"}], "]"}]}]}], 
     "/.", 
     RowBox[{"s", "->", "2"}]}], "/.", 
    RowBox[{"A", "->", 
     RowBox[{
      RowBox[{"\[Lambda]2bar", "[", 
       RowBox[{"\[Omega]", ",", "l", ",", "m"}], "]"}], "+", 
      RowBox[{"2", "*", "a", "*", "m", "*", "\[Omega]bar"}], "-", 
      RowBox[{
       SuperscriptBox["a", "2"], "*", 
       SuperscriptBox["\[Omega]bar", "2"]}]}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eqRn2bar", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox["\[CapitalDelta]", 
       RowBox[{"-", "s"}]], "*", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{
         SuperscriptBox["\[CapitalDelta]", 
          RowBox[{"s", "+", "1"}]], "*", 
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"Rn2bar", "[", 
            RowBox[{"\[Omega]", ",", "l", ",", "m", ",", "r"}], "]"}], ",", 
           "r"}], "]"}]}], ",", "r"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        FractionBox[
         RowBox[{
          SuperscriptBox[
           RowBox[{"Kbar", "[", 
            RowBox[{"\[Omega]", ",", "m"}], "]"}], "2"], "+", 
          RowBox[{"2", "*", "I", "*", "s", "*", 
           RowBox[{"(", 
            RowBox[{"r", "-", "M"}], ")"}], "*", 
           RowBox[{"Kbar", "[", 
            RowBox[{"\[Omega]", ",", "m"}], "]"}]}]}], "\[CapitalDelta]"], 
        "-", 
        RowBox[{"4", "*", "I", "*", "s", "*", "\[Omega]bar", "*", "r"}], "-", 
        
        RowBox[{"\[Lambda]n2bar", "[", 
         RowBox[{"\[Omega]", ",", "l", ",", "m"}], "]"}]}], ")"}], "*", 
      RowBox[{"Rn2bar", "[", 
       RowBox[{"\[Omega]", ",", "l", ",", "m", ",", "r"}], "]"}]}]}], "/.", 
    RowBox[{"s", "->", 
     RowBox[{"-", "2"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eqSn2bar", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[Theta]", "]"}], 
         RowBox[{"-", "1"}]]}], "*", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[Theta]", "]"}], 
              RowBox[{"-", "1"}]]}], "*", 
            RowBox[{"D", "[", 
             RowBox[{
              RowBox[{"Sn2bar", "[", 
               RowBox[{"\[Omega]", ",", "l", ",", "m", ",", "\[Theta]"}], 
               "]"}], ",", "\[Theta]"}], "]"}]}], ")"}]}], ",", "\[Theta]"}], 
        "]"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["a", "2"], "*", 
          SuperscriptBox["\[Omega]bar", "2"], "*", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "-", 
         FractionBox[
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"m", "+", 
             RowBox[{"s", "*", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}], "2"], 
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]], "-", 
         RowBox[{"2", "*", "a", "*", "s", "*", "\[Omega]bar", "*", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", "s", "+", "A"}], 
        ")"}], "*", 
       RowBox[{"Sn2bar", "[", 
        RowBox[{"\[Omega]", ",", "l", ",", "m", ",", "\[Theta]"}], "]"}]}]}], 
     "/.", 
     RowBox[{"A", "->", 
      RowBox[{
       RowBox[{"\[Lambda]n2bar", "[", 
        RowBox[{"\[Omega]", ",", "l", ",", "m"}], "]"}], "+", 
       RowBox[{"2", "*", "a", "*", "m", "*", "\[Omega]bar"}], "-", 
       RowBox[{
        SuperscriptBox["a", "2"], "*", 
        SuperscriptBox["\[Omega]bar", "2"]}]}]}]}], "/.", 
    RowBox[{"s", "->", 
     RowBox[{"-", "2"}]}]}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.922370393137403*^9, 3.922370583051791*^9}, {
  3.922370613665038*^9, 3.922370763979042*^9}, {3.922381493057518*^9, 
  3.922381493606189*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"2b6c9d5d-8473-4ad0-af25-0ee291f4afd6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"R2sub", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"R2", "[", 
           RowBox[{"\[Omega]0_", ",", "l0_", ",", "m0_", ",", "r"}], "]"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"r", ",", "2"}], "}"}]}], "]"}], ":>", 
        RowBox[{"Evaluate", "[", 
         RowBox[{"Simplify", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Solve", "[", 
              RowBox[{
               RowBox[{"eqR2", "==", "0"}], ",", 
               RowBox[{"D", "[", 
                RowBox[{
                 RowBox[{"R2", "[", 
                  RowBox[{"\[Omega]", ",", "l", ",", "m", ",", "r"}], "]"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{"r", ",", "2"}], "}"}]}], "]"}]}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], "]"}], "]"}]}], "/.", 
       RowBox[{"\[Omega]", "->", "\[Omega]0"}]}], "/.", 
      RowBox[{"\[Omega]bar", "->", 
       RowBox[{"Conjugate", "[", "\[Omega]0", "]"}]}]}], "/.", 
     RowBox[{"l", "->", "l0"}]}], "/.", 
    RowBox[{"m", "->", "m0"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Rn2sub", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"Rn2", "[", 
           RowBox[{"\[Omega]0_", ",", "l0_", ",", "m0_", ",", "r"}], "]"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"r", ",", "2"}], "}"}]}], "]"}], ":>", 
        RowBox[{"Evaluate", "[", 
         RowBox[{"Simplify", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Solve", "[", 
              RowBox[{
               RowBox[{"eqRn2", "==", "0"}], ",", 
               RowBox[{"D", "[", 
                RowBox[{
                 RowBox[{"Rn2", "[", 
                  RowBox[{"\[Omega]", ",", "l", ",", "m", ",", "r"}], "]"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{"r", ",", "2"}], "}"}]}], "]"}]}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], "]"}], "]"}]}], "/.", 
       RowBox[{"\[Omega]", "->", "\[Omega]0"}]}], "/.", 
      RowBox[{"\[Omega]bar", "->", 
       RowBox[{"Conjugate", "[", "\[Omega]0", "]"}]}]}], "/.", 
     RowBox[{"l", "->", "l0"}]}], "/.", 
    RowBox[{"m", "->", "m0"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"R2barsub", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"R2bar", "[", 
           RowBox[{"\[Omega]0_", ",", "l0_", ",", "m0_", ",", "r"}], "]"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"r", ",", "2"}], "}"}]}], "]"}], ":>", 
        RowBox[{"Evaluate", "[", 
         RowBox[{"Simplify", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Solve", "[", 
              RowBox[{
               RowBox[{"eqR2bar", "==", "0"}], ",", 
               RowBox[{"D", "[", 
                RowBox[{
                 RowBox[{"R2bar", "[", 
                  RowBox[{"\[Omega]", ",", "l", ",", "m", ",", "r"}], "]"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{"r", ",", "2"}], "}"}]}], "]"}]}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], "]"}], "]"}]}], "/.", 
       RowBox[{"\[Omega]", "->", "\[Omega]0"}]}], "/.", 
      RowBox[{"\[Omega]bar", "->", 
       RowBox[{"Conjugate", "[", "\[Omega]0", "]"}]}]}], "/.", 
     RowBox[{"l", "->", "l0"}]}], "/.", 
    RowBox[{"m", "->", "m0"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Rn2barsub", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"Rn2bar", "[", 
           RowBox[{"\[Omega]0_", ",", "l0_", ",", "m0_", ",", "r"}], "]"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"r", ",", "2"}], "}"}]}], "]"}], ":>", 
        RowBox[{"Evaluate", "[", 
         RowBox[{"Simplify", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Solve", "[", 
              RowBox[{
               RowBox[{"eqRn2bar", "==", "0"}], ",", 
               RowBox[{"D", "[", 
                RowBox[{
                 RowBox[{"Rn2bar", "[", 
                  RowBox[{"\[Omega]", ",", "l", ",", "m", ",", "r"}], "]"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{"r", ",", "2"}], "}"}]}], "]"}]}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], "]"}], "]"}]}], "/.", 
       RowBox[{"\[Omega]", "->", "\[Omega]0"}]}], "/.", 
      RowBox[{"\[Omega]bar", "->", 
       RowBox[{"Conjugate", "[", "\[Omega]0", "]"}]}]}], "/.", 
     RowBox[{"l", "->", "l0"}]}], "/.", 
    RowBox[{"m", "->", "m0"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Rsub", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"{", 
     RowBox[{"R2sub", ",", "Rn2sub", ",", "R2barsub", ",", "Rn2barsub"}], 
     "}"}], "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.922370772757766*^9, 3.9223707981123867`*^9}, {
  3.922370979122857*^9, 3.9223710360914707`*^9}, {3.922371094704529*^9, 
  3.922371095911487*^9}, {3.922371211801334*^9, 3.922371212003639*^9}, {
  3.922371260135037*^9, 3.922371297740841*^9}, {3.92301752313866*^9, 
  3.923017583967121*^9}, {3.9230636575948057`*^9, 3.9230636629655952`*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"43c4754d-edc8-43cb-9f04-230ab45964a3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"S2sub", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"S2", "[", 
           RowBox[{"\[Omega]0_", ",", "l0_", ",", "m0_", ",", "\[Theta]"}], 
           "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Theta]", ",", "2"}], "}"}]}], "]"}], ":>", 
        RowBox[{"Evaluate", "[", 
         RowBox[{"Simplify", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Solve", "[", 
              RowBox[{
               RowBox[{"eqS2", "==", "0"}], ",", 
               RowBox[{"D", "[", 
                RowBox[{
                 RowBox[{"S2", "[", 
                  RowBox[{"\[Omega]", ",", "l", ",", "m", ",", "\[Theta]"}], 
                  "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"\[Theta]", ",", "2"}], "}"}]}], "]"}]}], "]"}], 
             "[", 
             RowBox[{"[", "1", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], "]"}], "]"}]}], "/.", 
       RowBox[{"\[Omega]", "->", "\[Omega]0"}]}], "/.", 
      RowBox[{"\[Omega]bar", "->", 
       RowBox[{"Conjugate", "[", "\[Omega]0", "]"}]}]}], "/.", 
     RowBox[{"l", "->", "l0"}]}], "/.", 
    RowBox[{"m", "->", "m0"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Sn2sub", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"Sn2", "[", 
           RowBox[{"\[Omega]0_", ",", "l0_", ",", "m0_", ",", "\[Theta]"}], 
           "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Theta]", ",", "2"}], "}"}]}], "]"}], ":>", 
        RowBox[{"Evaluate", "[", 
         RowBox[{"Simplify", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Solve", "[", 
              RowBox[{
               RowBox[{"eqSn2", "==", "0"}], ",", 
               RowBox[{"D", "[", 
                RowBox[{
                 RowBox[{"Sn2", "[", 
                  RowBox[{"\[Omega]", ",", "l", ",", "m", ",", "\[Theta]"}], 
                  "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"\[Theta]", ",", "2"}], "}"}]}], "]"}]}], "]"}], 
             "[", 
             RowBox[{"[", "1", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], "]"}], "]"}]}], "/.", 
       RowBox[{"\[Omega]", "->", "\[Omega]0"}]}], "/.", 
      RowBox[{"\[Omega]bar", "->", 
       RowBox[{"Conjugate", "[", "\[Omega]0", "]"}]}]}], "/.", 
     RowBox[{"l", "->", "l0"}]}], "/.", 
    RowBox[{"m", "->", "m0"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S2barsub", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"S2bar", "[", 
           RowBox[{"\[Omega]0_", ",", "l0_", ",", "m0_", ",", "\[Theta]"}], 
           "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Theta]", ",", "2"}], "}"}]}], "]"}], ":>", 
        RowBox[{"Evaluate", "[", 
         RowBox[{"Simplify", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Solve", "[", 
              RowBox[{
               RowBox[{"eqS2bar", "==", "0"}], ",", 
               RowBox[{"D", "[", 
                RowBox[{
                 RowBox[{"S2bar", "[", 
                  RowBox[{"\[Omega]", ",", "l", ",", "m", ",", "\[Theta]"}], 
                  "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"\[Theta]", ",", "2"}], "}"}]}], "]"}]}], "]"}], 
             "[", 
             RowBox[{"[", "1", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], "]"}], "]"}]}], "/.", 
       RowBox[{"\[Omega]", "->", "\[Omega]0"}]}], "/.", 
      RowBox[{"\[Omega]bar", "->", 
       RowBox[{"Conjugate", "[", "\[Omega]0", "]"}]}]}], "/.", 
     RowBox[{"l", "->", "l0"}]}], "/.", 
    RowBox[{"m", "->", "m0"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Sn2barsub", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"Sn2bar", "[", 
           RowBox[{"\[Omega]0_", ",", "l0_", ",", "m0_", ",", "\[Theta]"}], 
           "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Theta]", ",", "2"}], "}"}]}], "]"}], ":>", 
        RowBox[{"Evaluate", "[", 
         RowBox[{"Simplify", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Solve", "[", 
              RowBox[{
               RowBox[{"eqSn2bar", "==", "0"}], ",", 
               RowBox[{"D", "[", 
                RowBox[{
                 RowBox[{"Sn2bar", "[", 
                  RowBox[{"\[Omega]", ",", "l", ",", "m", ",", "\[Theta]"}], 
                  "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"\[Theta]", ",", "2"}], "}"}]}], "]"}]}], "]"}], 
             "[", 
             RowBox[{"[", "1", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], "]"}], "]"}]}], "/.", 
       RowBox[{"\[Omega]", "->", "\[Omega]0"}]}], "/.", 
      RowBox[{"\[Omega]bar", "->", 
       RowBox[{"Conjugate", "[", "\[Omega]0", "]"}]}]}], "/.", 
     RowBox[{"l", "->", "l0"}]}], "/.", 
    RowBox[{"m", "->", "m0"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Ssub", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"{", 
     RowBox[{"S2sub", ",", "Sn2sub", ",", "S2barsub", ",", "Sn2barsub"}], 
     "}"}], "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.922370925563057*^9, 3.922370940867309*^9}, {
   3.922371018746832*^9, 3.922371059245616*^9}, {3.9223711156366663`*^9, 
   3.922371213865088*^9}, 3.9223713612920523`*^9, {3.9230636600563183`*^9, 
   3.9230636617816896`*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"adfbbea7-fc01-4df2-aff1-e2a6ebbbdeeb"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"eqR2", ",", "eqRn2", ",", "eqR2bar", ",", "eqRn2bar"}], "}"}], "/.",
     "Rsub"}], "/.", "\[Omega]sub"}], "//", 
  "Simplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"eqS2", ",", "eqSn2", ",", "eqS2bar", ",", "eqSn2bar"}], "}"}], "/.",
     "Ssub"}], "/.", "\[Omega]sub"}], "//", "Simplify"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.9230636607835903`*^9, 3.923063660959928*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"cee8d1a7-d561-46f5-9937-0dee134b4e03"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{
  3.9230636680038433`*^9, 3.92308592184901*^9, 3.92308646389611*^9, 
   3.923086694428996*^9, 3.923086750436425*^9, 3.9230878166973867`*^9, 
   3.923087961427631*^9, {3.9230885959862022`*^9, 3.9230886130636177`*^9}, 
   3.923088773077238*^9, {3.923089843810356*^9, 3.923089849432122*^9}, 
   3.923127561663167*^9, {3.923128369616605*^9, 3.923128376549107*^9}, 
   3.923129039038206*^9, 3.923129552227792*^9, 3.9231296380021133`*^9, 
   3.923129698240809*^9, 3.923129962465096*^9},
 CellLabel->"Out[47]=",ExpressionUUID->"ef1395e2-cfab-4ff4-b441-810ded8336d9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{
  3.9230636680038433`*^9, 3.92308592184901*^9, 3.92308646389611*^9, 
   3.923086694428996*^9, 3.923086750436425*^9, 3.9230878166973867`*^9, 
   3.923087961427631*^9, {3.9230885959862022`*^9, 3.9230886130636177`*^9}, 
   3.923088773077238*^9, {3.923089843810356*^9, 3.923089849432122*^9}, 
   3.923127561663167*^9, {3.923128369616605*^9, 3.923128376549107*^9}, 
   3.923129039038206*^9, 3.923129552227792*^9, 3.9231296380021133`*^9, 
   3.923129698240809*^9, 3.923129962482773*^9},
 CellLabel->"Out[48]=",ExpressionUUID->"c1472942-d76a-407a-abfd-0f60b3243e02"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["3. Radial and Angular Modes in Terms of Heun Functions", "Section",
 CellChangeTimes->{{3.9231274893804398`*^9, 
  3.923127514872386*^9}},ExpressionUUID->"e3ff47f1-3bbc-4f5c-90cc-\
51052f9ec997"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Subscripted", " ", "definitions", " ", "have", " ", "to", " ", "be", " ", 
    "done", " ", "outside", " ", "of", " ", "the", " ", "initialization", " ", 
    RowBox[{"blocks", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["r", "+"], "=", 
     RowBox[{"M", "+", 
      SqrtBox[
       RowBox[{
        SuperscriptBox["M", "2"], "-", 
        SuperscriptBox["a", "2"]}]]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["r", "-"], "=", 
     RowBox[{"M", "-", 
      SqrtBox[
       RowBox[{
        SuperscriptBox["M", "2"], "-", 
        SuperscriptBox["a", "2"]}]]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["c", "+"], "=", 
     FractionBox[
      RowBox[{"2", " ", "M", " ", 
       SubscriptBox["r", "+"]}], 
      RowBox[{
       SubscriptBox["r", "+"], "-", 
       SubscriptBox["r", "-"]}]]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["c", "-"], "=", 
     FractionBox[
      RowBox[{"2", " ", "M", " ", 
       SubscriptBox["r", "-"]}], 
      RowBox[{
       SubscriptBox["r", "+"], "-", 
       SubscriptBox["r", "-"]}]]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[CapitalOmega]", "+"], "=", 
     FractionBox["a", 
      RowBox[{"2", " ", "M", " ", 
       SubscriptBox["r", "+"]}]]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[CapitalOmega]", "-"], "=", 
     FractionBox["a", 
      RowBox[{"2", " ", "M", " ", 
       SubscriptBox["r", "-"]}]]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.923129972592901*^9, 
  3.9231299874696627`*^9}},ExpressionUUID->"4993cea6-09dd-4ec2-9e5a-\
f95605bfbc05"],

Cell[CellGroupData[{

Cell["Angular Modes", "Subsection",
 CellChangeTimes->{{3.92312916731983*^9, 
  3.923129169456315*^9}},ExpressionUUID->"f5a6a130-b1b1-4da7-a43a-\
5fcd3926b30a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Explicit", " ", "solutions", " ", "to", " ", "the", " ", "TAE", " ", "in",
     " ", "terms", " ", "of", " ", "confluent", " ", "Heun", " ", 
    RowBox[{"functions", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Shat2", "[", 
      RowBox[{
      "s_", ",", "\[Omega]_", ",", "l_", ",", "m_", ",", "\[Theta]_"}], "]"}],
      ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Mu]1", ",", "\[Mu]2", ",", "\[Beta]", ",", "p"}], "}"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[Mu]1", "=", 
         RowBox[{
          RowBox[{"Abs", "[", 
           RowBox[{"s", "+", "m"}], "]"}], "/", "2"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"\[Mu]2", "=", 
         RowBox[{
          RowBox[{"Abs", "[", 
           RowBox[{"s", "-", "m"}], "]"}], "/", "2"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"\[Beta]", "=", 
         RowBox[{"2", "*", "a", "*", "\[Omega]", "*", 
          RowBox[{"(", 
           RowBox[{"\[Mu]1", "+", "\[Mu]2", "+", "s", "+", "1"}], ")"}]}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"p", "=", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"\[Lambda]2", "[", 
            RowBox[{"\[Omega]", ",", "l", ",", "m"}], "]"}]}], "-", 
          RowBox[{"2", "*", "m", "*", "a", "*", "\[Omega]"}], "+", 
          RowBox[{"2", "*", "a", "*", "\[Omega]", "*", 
           RowBox[{"(", 
            RowBox[{"\[Mu]1", "-", "\[Mu]2"}], ")"}]}], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"\[Mu]1", "+", "\[Mu]2"}], ")"}], "2"], "+", "\[Mu]1", 
          "+", "\[Mu]2", "-", 
          RowBox[{"s", "*", 
           RowBox[{"(", 
            RowBox[{"s", "+", "1"}], ")"}]}]}]}], ";", "\[IndentingNewLine]", 
        
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ")"}], "\[Mu]1"], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ")"}], "\[Mu]2"], 
         RowBox[{"Exp", "[", 
          RowBox[{"a", "*", "\[Omega]", "*", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], 
         RowBox[{"HeunC", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "p"}], "+", "\[Beta]"}], ",", 
           RowBox[{"2", "*", "\[Beta]"}], ",", 
           RowBox[{
            RowBox[{"2", "*", "\[Mu]2"}], "+", "1"}], ",", 
           RowBox[{
            RowBox[{"2", "*", "\[Mu]1"}], "+", "1"}], ",", 
           RowBox[{"4", "*", "a", "*", "\[Omega]"}], ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ")"}], "/", "2"}]}], 
          "]"}]}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Shatn2", "[", 
      RowBox[{
      "s_", ",", "\[Omega]_", ",", "l_", ",", "m_", ",", "\[Theta]_"}], "]"}],
      ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Mu]1", ",", "\[Mu]2", ",", "\[Beta]", ",", "p"}], "}"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[Mu]1", "=", 
         RowBox[{
          RowBox[{"Abs", "[", 
           RowBox[{"s", "+", "m"}], "]"}], "/", "2"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"\[Mu]2", "=", 
         RowBox[{
          RowBox[{"Abs", "[", 
           RowBox[{"s", "-", "m"}], "]"}], "/", "2"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"\[Beta]", "=", 
         RowBox[{"2", "*", "a", "*", "\[Omega]", "*", 
          RowBox[{"(", 
           RowBox[{"\[Mu]1", "+", "\[Mu]2", "+", "s", "+", "1"}], ")"}]}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"p", "=", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"\[Lambda]n2", "[", 
            RowBox[{"\[Omega]", ",", "l", ",", "m"}], "]"}]}], "-", 
          RowBox[{"2", "*", "m", "*", "a", "*", "\[Omega]"}], "+", 
          RowBox[{"2", "*", "a", "*", "\[Omega]", "*", 
           RowBox[{"(", 
            RowBox[{"\[Mu]1", "-", "\[Mu]2"}], ")"}]}], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"\[Mu]1", "+", "\[Mu]2"}], ")"}], "2"], "+", "\[Mu]1", 
          "+", "\[Mu]2", "-", 
          RowBox[{"s", "*", 
           RowBox[{"(", 
            RowBox[{"s", "+", "1"}], ")"}]}]}]}], ";", "\[IndentingNewLine]", 
        
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ")"}], "\[Mu]1"], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ")"}], "\[Mu]2"], 
         RowBox[{"Exp", "[", 
          RowBox[{"a", "*", "\[Omega]", "*", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], 
         RowBox[{"HeunC", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "p"}], "+", "\[Beta]"}], ",", 
           RowBox[{"2", "*", "\[Beta]"}], ",", 
           RowBox[{
            RowBox[{"2", "*", "\[Mu]2"}], "+", "1"}], ",", 
           RowBox[{
            RowBox[{"2", "*", "\[Mu]1"}], "+", "1"}], ",", 
           RowBox[{"4", "*", "a", "*", "\[Omega]"}], ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ")"}], "/", "2"}]}], 
          "]"}]}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"The", " ", "solutions", " ", "are", " ", "solutions"}], " ", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"eqS2", "==", "0"}], "/.", 
     RowBox[{"{", 
      RowBox[{"S2", "->", 
       RowBox[{"Function", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\[Omega]", ",", "l", ",", "m", ",", "\[Theta]"}], "}"}], 
         ",", 
         RowBox[{"Shat2", "[", 
          RowBox[{"2", ",", "\[Omega]", ",", "l", ",", "m", ",", "\[Theta]"}],
           "]"}]}], "]"}]}], "}"}]}], " ", "//", "FullSimplify"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"eqSn2", "==", "0"}], "/.", 
     RowBox[{"{", 
      RowBox[{"Sn2", "->", 
       RowBox[{"Function", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\[Omega]", ",", "l", ",", "m", ",", "\[Theta]"}], "}"}], 
         ",", 
         RowBox[{"Shatn2", "[", 
          RowBox[{
           RowBox[{"-", "2"}], ",", "\[Omega]", ",", "l", ",", "m", ",", 
           "\[Theta]"}], "]"}]}], "]"}]}], "}"}]}], " ", "//", 
    "FullSimplify"}]}]}]], "Input",
 CellChangeTimes->{{3.922187029979148*^9, 3.922187038787467*^9}, {
  3.9221871709048033`*^9, 3.922187274662547*^9}, {3.922187334119431*^9, 
  3.9221873692182617`*^9}, {3.9221874084431963`*^9, 3.922187454980914*^9}, {
  3.922187502696156*^9, 3.922187506906478*^9}, {3.923128594711536*^9, 
  3.9231286189835157`*^9}, {3.923128910783547*^9, 3.9231289380763407`*^9}, {
  3.9231290471070127`*^9, 3.9231291135364647`*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"334fd8e4-1ce8-4296-b3e7-49676695613a"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.923129096460381*^9, 3.923129114256074*^9}, 
   3.923129999178829*^9},
 CellLabel->"Out[62]=",ExpressionUUID->"320a7951-5d38-4c81-8bd2-38e50d3b8e36"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.923129096460381*^9, 3.923129114256074*^9}, 
   3.92312999950037*^9},
 CellLabel->"Out[63]=",ExpressionUUID->"b8f8c13c-7477-4f96-addb-c0ed3ae298c2"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Radial Modes", "Subsection",
 CellChangeTimes->{{3.923129177472328*^9, 
  3.923129178527133*^9}},ExpressionUUID->"81e986f3-1827-482b-94af-\
fa086595d386"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Explicit", " ", "solutions", " ", "to", " ", "the", " ", "TRE", " ", "in",
     " ", "terms", " ", "of", " ", "confluent", " ", "Heun", " ", 
    RowBox[{"functions", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Rhat2in", "[", 
      RowBox[{"s_", ",", "\[Omega]_", ",", "l_", ",", "m_", ",", "r_"}], 
      "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "\[Xi]1", ",", "\[Xi]2", ",", "\[Gamma]", ",", "\[Delta]", ",", 
         "\[Epsilon]", ",", "\[Alpha]", ",", "q"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[Gamma]", "=", 
         RowBox[{
          RowBox[{"2", "\[Xi]1"}], "+", "s", "+", "1"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"\[Delta]", "=", 
         RowBox[{
          RowBox[{"2", "\[Xi]2"}], "+", "s", "+", "1"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"\[Epsilon]", "=", 
         RowBox[{
          RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "\[Omega]", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["r", "+"], "-", 
            SubscriptBox["r", "-"]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"\[Alpha]", "=", 
         RowBox[{
          RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "\[Omega]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", "s"}], "+", "1"}], ")"}], 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["r", "+"], "-", 
            SubscriptBox["r", "-"]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"q", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], "\[ImaginaryI]", " ", "\[Omega]", " ", 
           SubscriptBox["r", "+"], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", "s"}], "+", "1"}], ")"}]}], "+", 
          RowBox[{"\[Lambda]2", "[", 
           RowBox[{"\[Omega]", ",", "l", ",", "m"}], "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"\[Xi]1", "=", 
         RowBox[{"\[ImaginaryI]", " ", 
          SubscriptBox["c", "+"], 
          RowBox[{"(", 
           RowBox[{"\[Omega]", "-", 
            RowBox[{"m", " ", 
             SubscriptBox["\[CapitalOmega]", "+"]}]}], ")"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"\[Xi]2", "=", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], " ", 
          SubscriptBox["c", "-"], 
          RowBox[{"(", 
           RowBox[{"\[Omega]", "-", 
            RowBox[{"m", " ", 
             SubscriptBox["\[CapitalOmega]", "-"]}]}], ")"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["r", "+"], "-", 
            SubscriptBox["r", "-"]}], ")"}], 
          RowBox[{
           RowBox[{"-", "\[Xi]2"}], "-", "s"}]], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"r", "-", 
            SubscriptBox["r", "+"]}], ")"}], 
          RowBox[{
           RowBox[{"-", "\[Xi]1"}], "-", "s"}]], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"r", "-", 
            SubscriptBox["r", "-"]}], ")"}], "\[Xi]2"], 
         RowBox[{"Exp", "[", 
          RowBox[{"\[ImaginaryI]", " ", "\[Omega]", " ", 
           RowBox[{"(", 
            RowBox[{"r", "-", 
             SubscriptBox["r", "+"]}], ")"}]}], "]"}], 
         RowBox[{"HeunC", "[", 
          RowBox[{
           RowBox[{"q", "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"\[Epsilon]", "-", "\[Delta]"}], ")"}], 
             RowBox[{"(", 
              RowBox[{"1", "-", "\[Gamma]"}], ")"}]}]}], ",", 
           RowBox[{"\[Alpha]", "+", 
            RowBox[{"\[Epsilon]", 
             RowBox[{"(", 
              RowBox[{"1", "-", "\[Gamma]"}], ")"}]}]}], ",", 
           RowBox[{"2", "-", "\[Gamma]"}], ",", "\[Delta]", ",", "\[Epsilon]",
            ",", 
           RowBox[{"-", 
            FractionBox[
             RowBox[{"r", "-", 
              SubscriptBox["r", "+"]}], 
             RowBox[{
              SubscriptBox["r", "+"], "-", 
              SubscriptBox["r", "-"]}]]}]}], "]"}]}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Rhat2out", "[", 
      RowBox[{"s_", ",", "\[Omega]_", ",", "l_", ",", "m_", ",", "r_"}], 
      "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "\[Xi]1", ",", "\[Xi]2", ",", "\[Gamma]", ",", "\[Delta]", ",", 
         "\[Epsilon]", ",", "\[Alpha]", ",", "q"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[Gamma]", "=", 
         RowBox[{
          RowBox[{"2", "\[Xi]1"}], "+", "s", "+", "1"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"\[Delta]", "=", 
         RowBox[{
          RowBox[{"2", "\[Xi]2"}], "+", "s", "+", "1"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"\[Epsilon]", "=", 
         RowBox[{
          RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "\[Omega]", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["r", "+"], "-", 
            SubscriptBox["r", "-"]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"\[Alpha]", "=", 
         RowBox[{
          RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "\[Omega]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", "s"}], "+", "1"}], ")"}], 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["r", "+"], "-", 
            SubscriptBox["r", "-"]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"q", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], "\[ImaginaryI]", " ", "\[Omega]", " ", 
           SubscriptBox["r", "+"], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", "s"}], "+", "1"}], ")"}]}], "+", 
          RowBox[{"\[Lambda]2", "[", 
           RowBox[{"\[Omega]", ",", "l", ",", "m"}], "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"\[Xi]1", "=", 
         RowBox[{"\[ImaginaryI]", " ", 
          SubscriptBox["c", "+"], 
          RowBox[{"(", 
           RowBox[{"\[Omega]", "-", 
            RowBox[{"m", " ", 
             SubscriptBox["\[CapitalOmega]", "+"]}]}], ")"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"\[Xi]2", "=", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], " ", 
          SubscriptBox["c", "-"], 
          RowBox[{"(", 
           RowBox[{"\[Omega]", "-", 
            RowBox[{"m", " ", 
             SubscriptBox["\[CapitalOmega]", "-"]}]}], ")"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["r", "+"], "-", 
            SubscriptBox["r", "-"]}], ")"}], 
          RowBox[{"-", "\[Xi]2"}]], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"r", "-", 
            SubscriptBox["r", "+"]}], ")"}], "\[Xi]1"], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"r", "-", 
            SubscriptBox["r", "-"]}], ")"}], "\[Xi]2"], 
         RowBox[{"Exp", "[", 
          RowBox[{"\[ImaginaryI]", " ", "\[Omega]", 
           RowBox[{"(", 
            RowBox[{"r", "-", 
             SubscriptBox["r", "+"]}], ")"}]}], "]"}], 
         RowBox[{"HeunC", "[", 
          RowBox[{
          "q", ",", "\[Alpha]", ",", "\[Gamma]", ",", "\[Delta]", ",", 
           "\[Epsilon]", ",", 
           RowBox[{"-", 
            FractionBox[
             RowBox[{"r", "-", 
              SubscriptBox["r", "+"]}], 
             RowBox[{
              SubscriptBox["r", "+"], "-", 
              SubscriptBox["r", "-"]}]]}]}], "]"}]}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Rhatn2in", "[", 
      RowBox[{"s_", ",", "\[Omega]_", ",", "l_", ",", "m_", ",", "r_"}], 
      "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "\[Xi]1", ",", "\[Xi]2", ",", "\[Gamma]", ",", "\[Delta]", ",", 
         "\[Epsilon]", ",", "\[Alpha]", ",", "q"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[Gamma]", "=", 
         RowBox[{
          RowBox[{"2", "\[Xi]1"}], "+", "s", "+", "1"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"\[Delta]", "=", 
         RowBox[{
          RowBox[{"2", "\[Xi]2"}], "+", "s", "+", "1"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"\[Epsilon]", "=", 
         RowBox[{
          RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "\[Omega]", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["r", "+"], "-", 
            SubscriptBox["r", "-"]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"\[Alpha]", "=", 
         RowBox[{
          RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "\[Omega]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", "s"}], "+", "1"}], ")"}], 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["r", "+"], "-", 
            SubscriptBox["r", "-"]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"q", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], "\[ImaginaryI]", " ", "\[Omega]", " ", 
           SubscriptBox["r", "+"], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", "s"}], "+", "1"}], ")"}]}], "+", 
          RowBox[{"\[Lambda]n2", "[", 
           RowBox[{"\[Omega]", ",", "l", ",", "m"}], "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"\[Xi]1", "=", 
         RowBox[{"\[ImaginaryI]", " ", 
          SubscriptBox["c", "+"], 
          RowBox[{"(", 
           RowBox[{"\[Omega]", "-", 
            RowBox[{"m", " ", 
             SubscriptBox["\[CapitalOmega]", "+"]}]}], ")"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"\[Xi]2", "=", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], " ", 
          SubscriptBox["c", "-"], 
          RowBox[{"(", 
           RowBox[{"\[Omega]", "-", 
            RowBox[{"m", " ", 
             SubscriptBox["\[CapitalOmega]", "-"]}]}], ")"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["r", "+"], "-", 
            SubscriptBox["r", "-"]}], ")"}], 
          RowBox[{
           RowBox[{"-", "\[Xi]2"}], "-", "s"}]], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"r", "-", 
            SubscriptBox["r", "+"]}], ")"}], 
          RowBox[{
           RowBox[{"-", "\[Xi]1"}], "-", "s"}]], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"r", "-", 
            SubscriptBox["r", "-"]}], ")"}], "\[Xi]2"], 
         RowBox[{"Exp", "[", 
          RowBox[{"\[ImaginaryI]", " ", "\[Omega]", " ", 
           RowBox[{"(", 
            RowBox[{"r", "-", 
             SubscriptBox["r", "+"]}], ")"}]}], "]"}], 
         RowBox[{"HeunC", "[", 
          RowBox[{
           RowBox[{"q", "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"\[Epsilon]", "-", "\[Delta]"}], ")"}], 
             RowBox[{"(", 
              RowBox[{"1", "-", "\[Gamma]"}], ")"}]}]}], ",", 
           RowBox[{"\[Alpha]", "+", 
            RowBox[{"\[Epsilon]", 
             RowBox[{"(", 
              RowBox[{"1", "-", "\[Gamma]"}], ")"}]}]}], ",", 
           RowBox[{"2", "-", "\[Gamma]"}], ",", "\[Delta]", ",", "\[Epsilon]",
            ",", 
           RowBox[{"-", 
            FractionBox[
             RowBox[{"r", "-", 
              SubscriptBox["r", "+"]}], 
             RowBox[{
              SubscriptBox["r", "+"], "-", 
              SubscriptBox["r", "-"]}]]}]}], "]"}]}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Rhatn2out", "[", 
      RowBox[{"s_", ",", "\[Omega]_", ",", "l_", ",", "m_", ",", "r_"}], 
      "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "\[Xi]1", ",", "\[Xi]2", ",", "\[Gamma]", ",", "\[Delta]", ",", 
         "\[Epsilon]", ",", "\[Alpha]", ",", "q"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[Gamma]", "=", 
         RowBox[{
          RowBox[{"2", "\[Xi]1"}], "+", "s", "+", "1"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"\[Delta]", "=", 
         RowBox[{
          RowBox[{"2", "\[Xi]2"}], "+", "s", "+", "1"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"\[Epsilon]", "=", 
         RowBox[{
          RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "\[Omega]", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["r", "+"], "-", 
            SubscriptBox["r", "-"]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"\[Alpha]", "=", 
         RowBox[{
          RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "\[Omega]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", "s"}], "+", "1"}], ")"}], 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["r", "+"], "-", 
            SubscriptBox["r", "-"]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"q", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], "\[ImaginaryI]", " ", "\[Omega]", " ", 
           SubscriptBox["r", "+"], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", "s"}], "+", "1"}], ")"}]}], "+", 
          RowBox[{"\[Lambda]n2", "[", 
           RowBox[{"\[Omega]", ",", "l", ",", "m"}], "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"\[Xi]1", "=", 
         RowBox[{"\[ImaginaryI]", " ", 
          SubscriptBox["c", "+"], 
          RowBox[{"(", 
           RowBox[{"\[Omega]", "-", 
            RowBox[{"m", " ", 
             SubscriptBox["\[CapitalOmega]", "+"]}]}], ")"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"\[Xi]2", "=", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], " ", 
          SubscriptBox["c", "-"], 
          RowBox[{"(", 
           RowBox[{"\[Omega]", "-", 
            RowBox[{"m", " ", 
             SubscriptBox["\[CapitalOmega]", "-"]}]}], ")"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["r", "+"], "-", 
            SubscriptBox["r", "-"]}], ")"}], 
          RowBox[{"-", "\[Xi]2"}]], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"r", "-", 
            SubscriptBox["r", "+"]}], ")"}], "\[Xi]1"], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"r", "-", 
            SubscriptBox["r", "-"]}], ")"}], "\[Xi]2"], 
         RowBox[{"Exp", "[", 
          RowBox[{"\[ImaginaryI]", " ", "\[Omega]", 
           RowBox[{"(", 
            RowBox[{"r", "-", 
             SubscriptBox["r", "+"]}], ")"}]}], "]"}], 
         RowBox[{"HeunC", "[", 
          RowBox[{
          "q", ",", "\[Alpha]", ",", "\[Gamma]", ",", "\[Delta]", ",", 
           "\[Epsilon]", ",", 
           RowBox[{"-", 
            FractionBox[
             RowBox[{"r", "-", 
              SubscriptBox["r", "+"]}], 
             RowBox[{
              SubscriptBox["r", "+"], "-", 
              SubscriptBox["r", "-"]}]]}]}], "]"}]}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"The", " ", "solutions", " ", "are", " ", "solutions"}], " ", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"eqR2", "==", "0"}], "/.", 
     RowBox[{"{", 
      RowBox[{"R2", "->", 
       RowBox[{"Function", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\[Omega]", ",", "l", ",", "m", ",", "r"}], "}"}], ",", 
         RowBox[{"Rhat2in", "[", 
          RowBox[{"2", ",", "\[Omega]", ",", "l", ",", "m", ",", "r"}], 
          "]"}]}], "]"}]}], "}"}]}], " ", "//", "FullSimplify"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"eqR2", "==", "0"}], "/.", 
     RowBox[{"{", 
      RowBox[{"R2", "->", 
       RowBox[{"Function", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\[Omega]", ",", "l", ",", "m", ",", "r"}], "}"}], ",", 
         RowBox[{"Rhat2out", "[", 
          RowBox[{"2", ",", "\[Omega]", ",", "l", ",", "m", ",", "r"}], 
          "]"}]}], "]"}]}], "}"}]}], " ", "//", "FullSimplify"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"eqRn2", "==", "0"}], "/.", 
     RowBox[{"{", 
      RowBox[{"Rn2", "->", 
       RowBox[{"Function", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\[Omega]", ",", "l", ",", "m", ",", "r"}], "}"}], ",", 
         RowBox[{"Rhatn2in", "[", 
          RowBox[{
           RowBox[{"-", "2"}], ",", "\[Omega]", ",", "l", ",", "m", ",", 
           "r"}], "]"}]}], "]"}]}], "}"}]}], " ", "//", "FullSimplify"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"eqRn2", "==", "0"}], "/.", 
     RowBox[{"{", 
      RowBox[{"Rn2", "->", 
       RowBox[{"Function", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\[Omega]", ",", "l", ",", "m", ",", "r"}], "}"}], ",", 
         RowBox[{"Rhatn2out", "[", 
          RowBox[{
           RowBox[{"-", "2"}], ",", "\[Omega]", ",", "l", ",", "m", ",", 
           "r"}], "]"}]}], "]"}]}], "}"}]}], " ", "//", 
    "FullSimplify"}]}]}]], "Input",
 CellChangeTimes->{{3.922187029979148*^9, 3.922187038787467*^9}, {
  3.9221871709048033`*^9, 3.922187274662547*^9}, {3.922187334119431*^9, 
  3.9221873692182617`*^9}, {3.9221874084431963`*^9, 3.922187454980914*^9}, {
  3.922187502696156*^9, 3.922187506906478*^9}, {3.92312927295872*^9, 
  3.923129425385253*^9}, {3.923130010479673*^9, 3.923130058876171*^9}, {
  3.923130613070477*^9, 
  3.923130620589327*^9}},ExpressionUUID->"ced88f6d-2a34-43b6-9c7a-\
e3c2d23fc316"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.9231294351362886`*^9, {3.9231300034757977`*^9, 3.923130059161323*^9}},
 CellLabel->"Out[89]=",ExpressionUUID->"9eff1d19-02d4-451c-a362-95b5ea557974"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.9231294351362886`*^9, {3.9231300034757977`*^9, 3.92313005919557*^9}},
 CellLabel->"Out[90]=",ExpressionUUID->"a094a49d-21ab-482f-a905-2bbd66e4572d"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.9231294351362886`*^9, {3.9231300034757977`*^9, 3.923130059548677*^9}},
 CellLabel->"Out[91]=",ExpressionUUID->"5c6f0519-9748-4edc-8203-4670d05df775"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.9231294351362886`*^9, {3.9231300034757977`*^9, 3.923130059728546*^9}},
 CellLabel->"Out[92]=",ExpressionUUID->"3bd30e8c-5b91-46a5-80a5-b593468618c7"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"<<", "\"\<./metric-perturbations/habIRG.mx\>\""}]], "Input",
 CellChangeTimes->{{3.923130160454479*^9, 3.9231301877340183`*^9}},
 CellLabel->"In[95]:=",ExpressionUUID->"a735f1ad-32c2-4b45-b1f5-4553ae6f581f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Symbolic", " ", "conjugation"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"conjugate", "[", "exp_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", 
      RowBox[{"exp", "/.", 
       RowBox[{
        RowBox[{"Complex", "[", 
         RowBox[{"a_", ",", "b_"}], "]"}], ":>", " ", 
        RowBox[{"Complex", "[", 
         RowBox[{"a", ",", 
          RowBox[{"-", "b"}]}], "]"}]}]}]}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"complexSub", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"A", "->", 
        RowBox[{
         SubscriptBox["A", "x"], "+", 
         RowBox[{"\[ImaginaryI]", " ", 
          SubscriptBox["A", "y"]}]}]}], ",", 
       RowBox[{"Abar", "->", 
        RowBox[{
         SubscriptBox["A", "x"], "-", 
         RowBox[{"\[ImaginaryI]", " ", 
          SubscriptBox["A", "y"]}]}]}], ",", 
       RowBox[{"B", "->", 
        RowBox[{
         SubscriptBox["B", "x"], "+", 
         RowBox[{"\[ImaginaryI]", " ", 
          SubscriptBox["B", "y"]}]}]}], ",", 
       RowBox[{"Bbar", "->", 
        RowBox[{
         SubscriptBox["B", "x"], "-", 
         RowBox[{"\[ImaginaryI]", " ", 
          SubscriptBox["B", "y"]}]}]}], ",", 
       RowBox[{"\[Omega]", "->", 
        RowBox[{
         SubscriptBox["\[Omega]", "x"], "+", 
         RowBox[{"\[ImaginaryI]", " ", 
          SubscriptBox["\[Omega]", "y"]}]}]}], ",", 
       RowBox[{"\[Omega]bar", "->", 
        RowBox[{
         SubscriptBox["\[Omega]", "x"], "-", 
         RowBox[{"\[ImaginaryI]", " ", 
          SubscriptBox["\[Omega]", "y"]}]}]}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"modeSub", " ", "=", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"S2", "->", 
        RowBox[{"Function", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[Omega]", ",", "l", ",", "m", ",", "\[Theta]"}], "}"}], 
          ",", 
          RowBox[{"Shat2", "[", 
           RowBox[{
           "2", ",", "\[Omega]", ",", "l", ",", "m", ",", "\[Theta]"}], 
           "]"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"Sn2", "->", 
        RowBox[{"Function", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[Omega]", ",", "l", ",", "m", ",", "\[Theta]"}], "}"}], 
          ",", 
          RowBox[{"Shatn2", "[", 
           RowBox[{
            RowBox[{"-", "2"}], ",", "\[Omega]", ",", "l", ",", "m", ",", 
            "\[Theta]"}], "]"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"S2bar", "->", 
        RowBox[{"Function", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[Omega]", ",", "l", ",", "m", ",", "\[Theta]"}], "}"}], 
          ",", 
          RowBox[{"conjugate", "[", 
           RowBox[{"Shat2", "[", 
            RowBox[{
            "2", ",", "\[Omega]", ",", "l", ",", "m", ",", "\[Theta]"}], 
            "]"}], "]"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"Sn2bar", "->", 
        RowBox[{"Function", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[Omega]", ",", "l", ",", "m", ",", "\[Theta]"}], "}"}], 
          ",", 
          RowBox[{"conjugate", "[", 
           RowBox[{"Shatn2", "[", 
            RowBox[{
             RowBox[{"-", "2"}], ",", "\[Omega]", ",", "l", ",", "m", ",", 
             "\[Theta]"}], "]"}], "]"}]}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"R2", "->", 
        RowBox[{"Function", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[Omega]", ",", "l", ",", "m", ",", "r"}], "}"}], ",", 
          RowBox[{"Rhat2in", "[", 
           RowBox[{"2", ",", "\[Omega]", ",", "l", ",", "m", ",", "r"}], 
           "]"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"Rn2", "->", 
        RowBox[{"Function", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[Omega]", ",", "l", ",", "m", ",", "r"}], "}"}], ",", 
          RowBox[{"Rhatn2in", "[", 
           RowBox[{
            RowBox[{"-", "2"}], ",", "\[Omega]", ",", "l", ",", "m", ",", 
            "r"}], "]"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"R2bar", "->", 
        RowBox[{"Function", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[Omega]", ",", "l", ",", "m", ",", "r"}], "}"}], ",", 
          RowBox[{"conjugate", "[", 
           RowBox[{"Rhat2in", "[", 
            RowBox[{"2", ",", "\[Omega]", ",", "l", ",", "m", ",", "r"}], 
            "]"}], "]"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"Rn2bar", "->", 
        RowBox[{"Function", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[Omega]", ",", "l", ",", "m", ",", "r"}], "}"}], ",", 
          RowBox[{"conjugate", "[", 
           RowBox[{"Rhatn2in", "[", 
            RowBox[{
             RowBox[{"-", "2"}], ",", "\[Omega]", ",", "l", ",", "m", ",", 
             "r"}], "]"}], "]"}]}], "]"}]}]}], "\[IndentingNewLine]", "}"}]}],
     ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rplus", "[", 
     RowBox[{"a_", ",", "M_"}], "]"}], ":=", 
    RowBox[{"M", "+", 
     SqrtBox[
      RowBox[{
       SuperscriptBox["M", "2"], "-", 
       SuperscriptBox["a", "2"]}]]}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["a", "*"], "=", "0.43"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["M", "*"], "=", "0.88"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["m", "*"], "=", "2"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["l", "*"], "=", "3"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[Omega]", "xstar"], "=", "3.2"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[Omega]", "ystar"], "=", "0"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"The", " ", "nn", " ", "tetrad", " ", "component", " ", "in", " ", 
     RowBox[{"IRG", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"habIRG", "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "2"}], "]"}], "]"}], "/.", "complexSub"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"%", "/.", "modeSub"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Substitute", " ", "numerical", " ", "values", " ", "of", " ", "the", " ",
      "separation", " ", 
     RowBox[{"constants", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"%", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Lambda]2", "->", 
        RowBox[{"Function", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[Omega]", ",", "l", ",", "m"}], "}"}], ",", 
          RowBox[{"SpinWeightedSpheroidalEigenvalue", "[", 
           RowBox[{"2", ",", "l", ",", "m", ",", 
            RowBox[{
             SubscriptBox["a", "*"], " ", "\[Omega]"}]}], "]"}]}], "]"}]}], 
       ",", 
       RowBox[{"\[Lambda]n2", "->", 
        RowBox[{"Function", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[Omega]", ",", "l", ",", "m"}], "}"}], ",", 
          RowBox[{"SpinWeightedSpheroidalEigenvalue", "[", 
           RowBox[{
            RowBox[{"-", "2"}], ",", "l", ",", "m", ",", 
            RowBox[{
             SubscriptBox["a", "*"], " ", "\[Omega]"}]}], "]"}]}], "]"}]}]}], 
      "}"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Substitute", " ", "on", " ", "the", " ", "remaining", " ", 
     RowBox[{"parameters", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"%", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["A", "x"], "->", "1"}], ",", 
       RowBox[{
        SubscriptBox["A", "y"], "->", "0"}], ",", 
       RowBox[{
        SubscriptBox["B", "x"], "->", "0"}], ",", 
       RowBox[{
        SubscriptBox["B", "y"], "->", "0"}], ",", 
       RowBox[{"M", "->", 
        SubscriptBox["M", "*"]}], ",", 
       RowBox[{"a", "->", 
        SubscriptBox["a", "*"]}], ",", 
       RowBox[{"m", "->", 
        SubscriptBox["m", "*"]}], ",", 
       RowBox[{"\[Epsilon]g", "->", "1"}], ",", 
       RowBox[{"l", "->", 
        SubscriptBox["l", "*"]}], ",", 
       RowBox[{
        SubscriptBox["\[Omega]", "x"], "->", 
        SubscriptBox["\[Omega]", "xstar"]}], ",", 
       RowBox[{
        SubscriptBox["\[Omega]", "y"], "->", 
        SubscriptBox["\[Omega]", "ystar"]}], ",", 
       RowBox[{"\[Phi]", "->", "0.5"}], ",", 
       RowBox[{"t", "->", "1.2"}], ",", 
       RowBox[{"\[Theta]", "->", 
        RowBox[{"Pi", "/", "4"}]}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Plot", " ", "the", " ", 
     RowBox[{"result", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"%", "//", "Chop"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", 
       RowBox[{"1.1", 
        RowBox[{"rplus", "[", 
         RowBox[{
          SubscriptBox["a", "*"], ",", 
          SubscriptBox["M", "*"]}], "]"}]}], ",", 
       RowBox[{"10", " ", 
        RowBox[{"rplus", "[", 
         RowBox[{
          SubscriptBox["a", "*"], ",", 
          SubscriptBox["M", "*"]}], "]"}]}]}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.923130191469679*^9, 3.923130201496607*^9}, {
  3.923130422163529*^9, 3.9231305523159227`*^9}, {3.9231307054798307`*^9, 
  3.923130725904397*^9}, {3.923130932533209*^9, 3.923131016672414*^9}, {
  3.923131047801203*^9, 3.923131196029189*^9}, {3.9231312319040823`*^9, 
  3.923131261488194*^9}, {3.923131369490472*^9, 3.923131511900914*^9}, {
  3.9231315685055447`*^9, 3.923131673339656*^9}, {3.923131703490532*^9, 
  3.9231317609046288`*^9}, {3.923131956131815*^9, 
  3.923132027753027*^9}},ExpressionUUID->"43c15ab5-ad57-4bdc-a66e-\
2f51d3eb9c10"],

Cell[BoxData[
 GraphicsBox[
  InterpretationBox[{
    TagBox[{{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
         Opacity[1.], LineBox[CompressedData["
1:eJwBYQOe/CFib1JlAgAAADUAAAACAAAALtIBjUcA/T9CdRyLGSGSP+s6ztqz
Ev0/NLYlmvoJkz+oo5ooICX9PxJo1ayiepM/ZQxndow3/T9gSdsIL2+TPyJ1
M8T4Sf0/8pyepuzmkj/f3f8RZVz9P1l+FV4a5JE/nEbMX9Fu/T/aPF6bn2uQ
P1mvmK09gf0/JzbLu3YJjT8WGGX7qZP9P8o4v4RdcYg/04AxSRam/T9LDiKy
yySDP5Dp/ZaCuP0/vH8lSYR4ej8Ku5YyW939PwAMue7JatU+/13IaQwn/j+T
E3DWTvWMv7zGlLd4Of4/9ObGo3QKkr96L2EF5Uv+Py2R0aK3eZW/N5gtU1Fe
/j9wwlkKhryYv/QA+qC9cP4/5zZq8unHm7+xacbuKYP+PyZJMQX5kZ6/btKS
PJaV/j9S9NXo8oigvys7X4oCqP4/Y/mc3wWgob/ooyvYbrr+P4zokgn7iqK/
pQz4JdvM/j/1UmE+MUejv2J1xHNH3/4/ufvmzp/So78f3pDBs/H+P8rj2QHU
K6S/3EZdDyAE/z/G7MsB7VGkv5mvKV2MFv8/Gip8c5ZEpL9WGPaq+Cj/P5om
1ugBBKS/E4HC+GQ7/z9Z/hdi35Cjv9DpjkbRTf8/4g9tC1Xsor+NUluUPWD/
Pw5+9WH2F6K/Srsn4qly/z8MCcfnuhWhvwck9C8Whf8/xDsFFunPn7/EjMB9
gpf/P+70YcGLIp2/gfWMy+6p/z+WooWhMCmavz5eWRlbvP8/0hGtmiTqlr+4
L/K0M+H/P0LDKt04bI+/dZi+AqDz/z/Cn6sN4p6Hv5mARSgGAwBATMuc+0j+
fr9W6RF2chUAQBBzQL2yqkc/0LqqEUs6AEDuwrNhplaSPy7vkDiBQwBAavmJ
Reaylj+NI3dft0wAQPx9Mij7/Jo/SoxDrSNfAEBTux4gNqChP6jAKdRZaABA
ZkYO/rqWoz8H9Q/7j3EAQMqOjXLed6U/xF3cSPyDAEALx35Dq++oPyKSwm8y
jQBA5a1htqiBqj+BxqiWaJYAQMTjPujv9Ks/4PqOvZ6fAED7F4Xsr0etPz4v
deTUqABApHglYU54rj+dY1sLC7IAQL99055nha8//JdBMkG7AEB1fJdL5zaw
P0ozcV+WuwBAg9Ddp2s6sD9sI7GB
          "]], 
         LineBox[{{2.815581576888124, 0.06339142654707257}, {
          2.8199514906550975`, 0.06055915271461443}, {2.828878898080629, 
          0.05458206081587464}, {2.846733712931692, 0.04197970759389683}, {
          2.8511974166444576`, 0.038718407971577155`}, {2.8556611203572233`, 
          0.03542119889546945}, {2.8645885277827547`, 
          0.028735787968699803`}, {2.8824433426338176`, 
          0.01511735912443864}, {2.918152972335944, -0.012203370944383913`}, {
          2.92261667604871, -0.01555053660765645}, {
          2.9270803797614757`, -0.018870298692053162`}, {
          2.936007787187007, -0.02541364122646707}, {
          2.95386260203807, -0.03802208220316233}, {
          2.9583263057508358`, -0.04105602229128478}, {
          2.9627900094636015`, -0.044036681059918655`}, {
          2.971717416889133, -0.0498268462608482}, {
          2.989572231740196, -0.060648679479429736`}, {
          2.9915678026653043`, -0.06177979764424375}}], 
         LineBox[CompressedData["
1:eJwBcQGO/iFib1JlAgAAABYAAAACAAAA/6JjdiMICkAa/d4EmqGvv17TSaP3
FQpAI25if2Xyrb8s06qbTGUKQCwdbAlJMqO/1VZg0I1uCkCduOtu5t+hv37a
FQXPdwpAN2cXXP6KoL/R4YBuUYoKQNZmMCK4tZu/dvBWQVavCkBQpMJk4dOQ
v8ENA+df+QpAPOxlGly5cz9qkbgboQILQEjJf3GpbH4/FBVuUOILC0CqD5Ke
L4eEP2Yc2blkHgtAfPKZCkIKjz8MK6+MaUMLQHR273uSvJk/VkhbMnONC0Aq
JySlZEmmPwDMEGe0lgtA5nf5kGlfpz+pT8ab9Z8LQFoe/XOWb6g//FYxBXiy
C0B8Cfdqs32qP6Xa5jm5uwtAlbiSRU17qz9OXpxu+sQLQHxT26xicqw/oWUH
2HzXC0DQkl8tZkyuP0rpvAy+4AtAJ7DpkAsvrz/0bHJB/+kLQFXMYY1NBbA/
xT6eV7XuC0CD0N2nazqwPxw1oX4=
          "]], LineBox[CompressedData["
1:eJwB8QEO/iFib1JlAgAAAB4AAAACAAAAZ7uhaO3kDUCD0N2nazqwP+EPybuL
9g1AER1sr1ERrz90+l5LkwAOQMn1rVH3OK4/B+X02poKDkDQFWS/cVutPy26
IPqpHg5AAmj0IsCRqz95ZHg4yEYOQJK4/Erdyac/EbkntQSXDkAg+PaAFjSf
P0Fihq59Nw9AqNDAb6Q8a7/sBthqVkEPQJgVxQ+f9nW/mKspJy9LD0DEMSty
AEF+v+70zJ/gXg9AFpVGHBZTh7+chxORQ4YPQDah4zisopO/RyxlTRyQD0DJ
r6UNAZOVv/LQtgn1mQ9AwlCBSxp9l79JGlqCpq0PQFwocXNaPZu/9qygcwnV
D0D15sqH3zKhv6FR8i/i3g9AhI52HOwNor9M9kPsuugPQINe8Ze05KK/oz/n
ZGz8D0CQiOdm+YSkvyjpFqvnERBAhgvwbw+Np79+uz8J1BYQQEbhK/2wQqi/
041oZ8AbEEBaNTbrKvOov34yuiOZJRBAr6nUOEtEqr/Ve12cSjkQQPR5iWn0
pKy/Kk6G+jY+EEAdm1brBy+tv4Agr1gjQxBA1GNEElizrb8sxQAV/EwQQOaz
jzh2qq6/gpcpc+hREEDlTZgKKx2vv9dpUtHUVhBApwQGJuqJr78NewQpAFgQ
QBr93gSaoa+/j4XgRg==
          "]], LineBox[CompressedData["
1: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
fg3MHW7b7YlrRIw4byYzoMlz9pmvtic+amcgqpLGAOHBm5FtRp74S8sR6rUM
Bnjsi0i/YO2JE1g1VenZDJDVeZdaypxvlAw1tMpzGVAZm2xt6OmJHxepnZS5
woC4+tdqgQGe2O3bdpu8QgZIx1nskA31xPwaiu7CJQw4dr69FCI9cXM8NTSl
jAFOUvx976I98clR2WTuSma+pF8XlmM88RJNojC6mgGvMjnLU5h2lq/wVZY6
BvSyWqxWRHlitV7erqCrDPhnTBjbG+6JXwlxDf5uYPpfjzw0DPbE/rYbRj2a
GWDDf/vgrI8nFm9em5lrZcAbbQ9TNjdP3Pnvv98ONxjwINJqe5mdJzY/trhx
sp0BN9w+8/Sd9sSrBXPCVl3MeMPNh70MPHHh12ny6G0GlHDb3a1FnvjA3nEV
47sM6HA8neKy3RN/iHtz8Ek3870pHb/TKeuJw169NNTtZQB/Wodl3hZP3O09
6AaDDFD/rIN4pzzwuZ77l7oeMcDITm+wdsgDswviRLUnDKAfob16f8MDaze2
1im9YECDxQcumUgPPLN2raN6hAELExHs2x08cJx+zQBplAGsMub/fTrqgR9+
LpgmvGdAhCVlvy6PB3ZVz/mV8ZHZb4OkDyxf3DFvbBo73yQDgvM2aDn1u2ND
Sgxp4ywD1A4PfjUPcccvrC5aLSww4O5o+aJ750Vsw/FCUHOJef+xJUKZ00U8
f029P/03A3KIMffvil7Em9ZYt6v+ZQBv1OXeGWc3rHElk9WPXRGGBD/NXfnr
iitedVSsiirCuo6026FeJ7wjVOa0gbgiOBcXDb01ccJ35CO3FEky7R9itW+n
HfFrH31fRFSEporG19psjniz8IcjEQqKsLfiXUQFzR57G7J/5dRQBA2yyoy/
qi1mXXYsNjugCCr6Bnl/m2xwcvFjo1pQhGP/a7DK46HsojAlaygRqWQJad55
37EkKe7JmiVbtoTGPmYwSLIvJUV2JQpJtIqoRMlVibRQktAmSl+SVEiSvvnz
/s7vnvPc5zznuUd9Gf8RwgufHy9osjSlwdDbYalGRSZ+naGRlWlDAyuPnw8i
/+7CJh02msu8aOBCFxjn6uzA0kZF+xRSaVDW4Znr1yGF3RfW3y07TAO+tisq
BqvaDc+0dourHKHBhPjqtTRNaaRlvrhCPYeHV3l2nJlI5+1/iU8ZJ2jApIkE
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
/zmwlmo=
          "]], 
         LineBox[{{16.111356365150133`, 0.06339142654707257}, {
          16.115175861042232`, -0.04925138380220791}, {16.1196848082812, 
          0.02892006997361677}, {16.124193755520167`, -0.02779012218600238}, {
          16.128702702759135`, 0.012500305029022845`}, {16.133211649998103`, 
          0.00930637875054108}, {16.13772059723707, 0.008497414546586491}, {
          16.142229544476038`, 0.04341279118147265}, {16.146738491715006`, 
          0.02245625811015257}, {16.151247438953973`, 
          0.035236038598393006`}, {16.15575638619294, -0.03616103867089301}, {
          16.160789724470387`, 0.009586423977558302}, {16.165823062747833`, 
          0.027766220180855013`}, {16.170856401025283`, 0.0360480900232724}, {
          16.17588973930273, 0.01291183295381257}, {16.17957002005358, 
          0.06339142654707257}}], LineBox[CompressedData["
1:eJwBQQG+/iFib1JlAgAAABMAAAACAAAA25aDwysgAUCD0N2nazqwP0J2CRCO
JwFAU/2Ek9fGrz+KEdCRijEBQHGPyxSUsq4/0qyWE4c7AUACS+Hk8natPxtI
XZWDRQFA6up2vq8VrD9k4yMXgE8BQBqpoSirkKo/rH7qmHxZAUCcvl7P5umo
Pzy1d5x1bQFAfhBmabU/pT+EUD4ecncBQPDkz9LQQKM/zOsEoG6BAUAHsQlV
NimhP10ikqNnlQFAmEuZeWRzmT9+j6yqWb0BQEDHf20PAXk/wGnhuD0NAkAU
ZxsC3sigvwgFqDo6FwJAcjBO1Vsoo79QoG68NiECQJi33QP8eaW/4db7vy81
AkAC1Ngs4OupvypywkEsPwJAHrYs034IrL9yDYnDKEkCQBIIkxn3D66/a3nu
Wm9RAkAa/d4EmqGvv/bBhqs=
          "]], 
         LineBox[{{2.4482047058790046`, -0.06177979764424375}, {
          2.4489263087974127`, -0.06128411639154031}, {
          2.4534793246068016`, -0.05796353837481902}, {
          2.4580323404161906`, -0.05452462724620029}, {
          2.467138372034968, -0.047323688180869995`}, {
          2.4853504352725233`, -0.03185786618027973}, {
          2.4899034510819122`, -0.02781807286161047}, {
          2.494456466891301, -0.023725619262667023`}, {
          2.5035624985100786`, -0.015416015508270781`}, {2.521774561747634, 
          0.0014716623668274247`}, {2.558198688222745, 0.03455771264507966}, {
          2.5627517040321335`, 0.03848528027384912}, {2.5673047198415224`, 
          0.04234404303797647}, {2.5764107514603003`, 
          0.049830520819169534`}, {2.5809637672696892`, 
          0.05344647189399136}, {2.585516783079078, 0.05697010261424991}, {
          2.5941802750778242`, 0.06339142654707257}}], 
         LineBox[{{16.232235760923256`, -0.06177979764424375}, {
          16.236289798632093`, -0.019047859939758122`}, {
          16.238976816990736`, -0.06177979764424375}}], 
         LineBox[{{16.19225232680366, -0.06177979764424375}, {
          16.196023092412517`, -0.014317189805491905`}, {16.201056430689963`, 
          0.05179602311209891}, {16.20606385120417, 0.06339142654707257}}], 
         LineBox[{{16.349270646832643`, 0.06339142654707257}, {
          16.352056579013375`, 0.04403668924184021}, {16.35708991729082, 
          0.040652142769553354`}, {16.362123255568267`, 
          0.03428864785572404}, {
          16.367156593845714`, -0.027793852694844325`}, {16.36964842692349, 
          0.06339142654707257}}], 
         LineBox[{{16.333756353728916`, -0.06177979764424375}, {
          16.336956564181033`, 0.013282947047277876`}, {16.34198990245848, 
          0.027240476481498185`}, {16.345505060248747`, 
          0.06339142654707257}}], 
         LineBox[{{16.247761373879612`, 0.06339142654707257}, {
          16.251389813464435`, -0.0468761430682193}, {16.25642315174188, 
          0.022284055544841135`}, {16.257799343108, 0.06339142654707257}}], 
         LineBox[{{16.406476538716067`, -0.06177979764424375}, {
          16.40742330006529, -0.0222570351947629}, {16.410202426796847`, 
          0.06339142654707257}}], 
         LineBox[{{16.183297751868285`, 0.06339142654707257}, {
          16.185956415857625`, 0.04261310013717964}, {
          16.19032475133516, -0.06177979764424375}}], 
         LineBox[{{16.264320693131562`, 0.06339142654707257}, {
          16.266489828296777`, -0.01933915615199493}, {16.271523166574223`, 
          0.030051272518909246`}, {16.273027055649877`, 
          0.06339142654707257}}], 
         LineBox[{{16.216975101164856`, 0.06339142654707257}, {
          16.22118978379975, -0.05635876187810349}, {16.2262231220772, 
          0.0526528091787093}, {16.230839994947154`, -0.06177979764424375}}], 
         LineBox[{{16.305884154027016`, -0.06177979764424375}, {
          16.306756534516353`, -0.030389865402405736`}, {
          16.307641603380358`, -0.06177979764424375}}], 
         LineBox[{{16.31953516607766, -0.06177979764424375}, {
          16.32185654934869, 0.0025521656892531566`}, {16.323958829062832`, 
          0.06339142654707257}}], 
         LineBox[{{16.431139351664292`, 0.06339142654707257}, {
          16.432589991452527`, 0.031006167171334746`}, {16.43339807474901, 
          0.06339142654707257}}], 
         LineBox[{{16.399410632731865`, 0.06339142654707257}, {
          16.400671514330455`, -0.06177979764424375}}], 
         LineBox[{{16.379424552660712`, 0.06339142654707257}, {
          16.381369439506123`, -0.06177979764424375}}], 
         LineBox[{{16.299166596659752`, 0.06339142654707257}, {
          16.30033074270517, -0.06177979764424375}}], 
         LineBox[{{16.458136062168307`, 0.06339142654707257}, {
          16.45953724514148, -0.06177979764424375}}], 
         LineBox[{{16.328577478091454`, 0.06339142654707257}, {
          16.33106778938076, -0.06177979764424375}}], 
         LineBox[{{16.38911655468975, 0.06339142654707257}, {
          16.390556108474108`, -0.06177979764424375}}], 
         LineBox[{{16.242238495224854`, -0.06177979764424375}, {
          16.245309117884073`, 0.06339142654707257}}], 
         LineBox[{{16.424642152543655`, -0.06177979764424375}, {
          16.426420383012324`, 0.06339142654707257}}], 
         LineBox[{{16.38309916252022, -0.06177979764424375}, {
          16.384946241900366`, 0.06339142654707257}}], 
         LineBox[{{16.465724795238643`, -0.06177979764424375}, {
          16.466988994052134`, 0.06339142654707257}}], 
         LineBox[{{16.413496247783925`, 0.06339142654707257}, {
          16.415369381706007`, -0.06177979764424375}}], 
         LineBox[{{16.393925431583266`, -0.06177979764424375}, {
          16.395230550513872`, 0.06339142654707257}}]},
        Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
     {"WolframDynamicHighlight", <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
    DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
      Slot["HighlightElements"], 
      Slot["LayoutOptions"], 
      Slot["Meta"], 
      Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
          Annotation[{
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]], 
            Line[CompressedData["
1:eJwBYQOe/CFib1JlAgAAADUAAAACAAAALtIBjUcA/T9CdRyLGSGSP+s6ztqz
Ev0/NLYlmvoJkz+oo5ooICX9PxJo1ayiepM/ZQxndow3/T9gSdsIL2+TPyJ1
M8T4Sf0/8pyepuzmkj/f3f8RZVz9P1l+FV4a5JE/nEbMX9Fu/T/aPF6bn2uQ
P1mvmK09gf0/JzbLu3YJjT8WGGX7qZP9P8o4v4RdcYg/04AxSRam/T9LDiKy
yySDP5Dp/ZaCuP0/vH8lSYR4ej8Ku5YyW939PwAMue7JatU+/13IaQwn/j+T
E3DWTvWMv7zGlLd4Of4/9ObGo3QKkr96L2EF5Uv+Py2R0aK3eZW/N5gtU1Fe
/j9wwlkKhryYv/QA+qC9cP4/5zZq8unHm7+xacbuKYP+PyZJMQX5kZ6/btKS
PJaV/j9S9NXo8oigvys7X4oCqP4/Y/mc3wWgob/ooyvYbrr+P4zokgn7iqK/
pQz4JdvM/j/1UmE+MUejv2J1xHNH3/4/ufvmzp/So78f3pDBs/H+P8rj2QHU
K6S/3EZdDyAE/z/G7MsB7VGkv5mvKV2MFv8/Gip8c5ZEpL9WGPaq+Cj/P5om
1ugBBKS/E4HC+GQ7/z9Z/hdi35Cjv9DpjkbRTf8/4g9tC1Xsor+NUluUPWD/
Pw5+9WH2F6K/Srsn4qly/z8MCcfnuhWhvwck9C8Whf8/xDsFFunPn7/EjMB9
gpf/P+70YcGLIp2/gfWMy+6p/z+WooWhMCmavz5eWRlbvP8/0hGtmiTqlr+4
L/K0M+H/P0LDKt04bI+/dZi+AqDz/z/Cn6sN4p6Hv5mARSgGAwBATMuc+0j+
fr9W6RF2chUAQBBzQL2yqkc/0LqqEUs6AEDuwrNhplaSPy7vkDiBQwBAavmJ
Reaylj+NI3dft0wAQPx9Mij7/Jo/SoxDrSNfAEBTux4gNqChP6jAKdRZaABA
ZkYO/rqWoz8H9Q/7j3EAQMqOjXLed6U/xF3cSPyDAEALx35Dq++oPyKSwm8y
jQBA5a1htqiBqj+BxqiWaJYAQMTjPujv9Ks/4PqOvZ6fAED7F4Xsr0etPz4v
deTUqABApHglYU54rj+dY1sLC7IAQL99055nha8//JdBMkG7AEB1fJdL5zaw
P0ozcV+WuwBAg9Ddp2s6sD9sI7GB
             "]], 
            
            Line[{{2.815581576888124, 0.06339142654707257}, {
             2.8199514906550975`, 0.06055915271461443}, {2.828878898080629, 
             0.05458206081587464}, {2.846733712931692, 0.04197970759389683}, {
             2.8511974166444576`, 0.038718407971577155`}, {
             2.8556611203572233`, 0.03542119889546945}, {2.8645885277827547`, 
             0.028735787968699803`}, {2.8824433426338176`, 
             0.01511735912443864}, {
             2.918152972335944, -0.012203370944383913`}, {
             2.92261667604871, -0.01555053660765645}, {
             2.9270803797614757`, -0.018870298692053162`}, {
             2.936007787187007, -0.02541364122646707}, {
             2.95386260203807, -0.03802208220316233}, {
             2.9583263057508358`, -0.04105602229128478}, {
             2.9627900094636015`, -0.044036681059918655`}, {
             2.971717416889133, -0.0498268462608482}, {
             2.989572231740196, -0.060648679479429736`}, {
             2.9915678026653043`, -0.06177979764424375}}], 
            Line[CompressedData["
1:eJwBcQGO/iFib1JlAgAAABYAAAACAAAA/6JjdiMICkAa/d4EmqGvv17TSaP3
FQpAI25if2Xyrb8s06qbTGUKQCwdbAlJMqO/1VZg0I1uCkCduOtu5t+hv37a
FQXPdwpAN2cXXP6KoL/R4YBuUYoKQNZmMCK4tZu/dvBWQVavCkBQpMJk4dOQ
v8ENA+df+QpAPOxlGly5cz9qkbgboQILQEjJf3GpbH4/FBVuUOILC0CqD5Ke
L4eEP2Yc2blkHgtAfPKZCkIKjz8MK6+MaUMLQHR273uSvJk/VkhbMnONC0Aq
JySlZEmmPwDMEGe0lgtA5nf5kGlfpz+pT8ab9Z8LQFoe/XOWb6g//FYxBXiy
C0B8Cfdqs32qP6Xa5jm5uwtAlbiSRU17qz9OXpxu+sQLQHxT26xicqw/oWUH
2HzXC0DQkl8tZkyuP0rpvAy+4AtAJ7DpkAsvrz/0bHJB/+kLQFXMYY1NBbA/
xT6eV7XuC0CD0N2nazqwPxw1oX4=
             "]], 
            Line[CompressedData["
1:eJwB8QEO/iFib1JlAgAAAB4AAAACAAAAZ7uhaO3kDUCD0N2nazqwP+EPybuL
9g1AER1sr1ERrz90+l5LkwAOQMn1rVH3OK4/B+X02poKDkDQFWS/cVutPy26
IPqpHg5AAmj0IsCRqz95ZHg4yEYOQJK4/Erdyac/EbkntQSXDkAg+PaAFjSf
P0Fihq59Nw9AqNDAb6Q8a7/sBthqVkEPQJgVxQ+f9nW/mKspJy9LD0DEMSty
AEF+v+70zJ/gXg9AFpVGHBZTh7+chxORQ4YPQDah4zisopO/RyxlTRyQD0DJ
r6UNAZOVv/LQtgn1mQ9AwlCBSxp9l79JGlqCpq0PQFwocXNaPZu/9qygcwnV
D0D15sqH3zKhv6FR8i/i3g9AhI52HOwNor9M9kPsuugPQINe8Ze05KK/oz/n
ZGz8D0CQiOdm+YSkvyjpFqvnERBAhgvwbw+Np79+uz8J1BYQQEbhK/2wQqi/
041oZ8AbEEBaNTbrKvOov34yuiOZJRBAr6nUOEtEqr/Ve12cSjkQQPR5iWn0
pKy/Kk6G+jY+EEAdm1brBy+tv4Agr1gjQxBA1GNEElizrb8sxQAV/EwQQOaz
jzh2qq6/gpcpc+hREEDlTZgKKx2vv9dpUtHUVhBApwQGJuqJr78NewQpAFgQ
QBr93gSaoa+/j4XgRg==
             "]], 
            Line[CompressedData["
1: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
fg3MHW7b7YlrRIw4byYzoMlz9pmvtic+amcgqpLGAOHBm5FtRp74S8sR6rUM
Bnjsi0i/YO2JE1g1VenZDJDVeZdaypxvlAw1tMpzGVAZm2xt6OmJHxepnZS5
woC4+tdqgQGe2O3bdpu8QgZIx1nskA31xPwaiu7CJQw4dr69FCI9cXM8NTSl
jAFOUvx976I98clR2WTuSma+pF8XlmM88RJNojC6mgGvMjnLU5h2lq/wVZY6
BvSyWqxWRHlitV7erqCrDPhnTBjbG+6JXwlxDf5uYPpfjzw0DPbE/rYbRj2a
GWDDf/vgrI8nFm9em5lrZcAbbQ9TNjdP3Pnvv98ONxjwINJqe5mdJzY/trhx
sp0BN9w+8/Sd9sSrBXPCVl3MeMPNh70MPHHh12ny6G0GlHDb3a1FnvjA3nEV
47sM6HA8neKy3RN/iHtz8Ek3870pHb/TKeuJw169NNTtZQB/Wodl3hZP3O09
6AaDDFD/rIN4pzzwuZ77l7oeMcDITm+wdsgDswviRLUnDKAfob16f8MDaze2
1im9YECDxQcumUgPPLN2raN6hAELExHs2x08cJx+zQBplAGsMub/fTrqgR9+
LpgmvGdAhCVlvy6PB3ZVz/mV8ZHZb4OkDyxf3DFvbBo73yQDgvM2aDn1u2ND
Sgxp4ywD1A4PfjUPcccvrC5aLSww4O5o+aJ750Vsw/FCUHOJef+xJUKZ00U8
f029P/03A3KIMffvil7Em9ZYt6v+ZQBv1OXeGWc3rHElk9WPXRGGBD/NXfnr
iitedVSsiirCuo6026FeJ7wjVOa0gbgiOBcXDb01ccJ35CO3FEky7R9itW+n
HfFrH31fRFSEporG19psjniz8IcjEQqKsLfiXUQFzR57G7J/5dRQBA2yyoy/
qi1mXXYsNjugCCr6Bnl/m2xwcvFjo1pQhGP/a7DK46HsojAlaygRqWQJad55
37EkKe7JmiVbtoTGPmYwSLIvJUV2JQpJtIqoRMlVibRQktAmSl+SVEiSvvnz
/s7vnvPc5zznuUd9Gf8RwgufHy9osjSlwdDbYalGRSZ+naGRlWlDAyuPnw8i
/+7CJh02msu8aOBCFxjn6uzA0kZF+xRSaVDW4Znr1yGF3RfW3y07TAO+tisq
BqvaDc+0dourHKHBhPjqtTRNaaRlvrhCPYeHV3l2nJlI5+1/iU8ZJ2jApIkE
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
/zmwlmo=
             "]], 
            
            Line[{{16.111356365150133`, 0.06339142654707257}, {
             16.115175861042232`, -0.04925138380220791}, {16.1196848082812, 
             0.02892006997361677}, {
             16.124193755520167`, -0.02779012218600238}, {16.128702702759135`,
              0.012500305029022845`}, {16.133211649998103`, 
             0.00930637875054108}, {16.13772059723707, 
             0.008497414546586491}, {16.142229544476038`, 
             0.04341279118147265}, {16.146738491715006`, 
             0.02245625811015257}, {16.151247438953973`, 
             0.035236038598393006`}, {
             16.15575638619294, -0.03616103867089301}, {16.160789724470387`, 
             0.009586423977558302}, {16.165823062747833`, 
             0.027766220180855013`}, {16.170856401025283`, 
             0.0360480900232724}, {16.17588973930273, 0.01291183295381257}, {
             16.17957002005358, 0.06339142654707257}}], 
            Line[CompressedData["
1:eJwBQQG+/iFib1JlAgAAABMAAAACAAAA25aDwysgAUCD0N2nazqwP0J2CRCO
JwFAU/2Ek9fGrz+KEdCRijEBQHGPyxSUsq4/0qyWE4c7AUACS+Hk8natPxtI
XZWDRQFA6up2vq8VrD9k4yMXgE8BQBqpoSirkKo/rH7qmHxZAUCcvl7P5umo
Pzy1d5x1bQFAfhBmabU/pT+EUD4ecncBQPDkz9LQQKM/zOsEoG6BAUAHsQlV
NimhP10ikqNnlQFAmEuZeWRzmT9+j6yqWb0BQEDHf20PAXk/wGnhuD0NAkAU
ZxsC3sigvwgFqDo6FwJAcjBO1Vsoo79QoG68NiECQJi33QP8eaW/4db7vy81
AkAC1Ngs4OupvypywkEsPwJAHrYs034IrL9yDYnDKEkCQBIIkxn3D66/a3nu
Wm9RAkAa/d4EmqGvv/bBhqs=
             "]], 
            
            Line[{{2.4482047058790046`, -0.06177979764424375}, {
             2.4489263087974127`, -0.06128411639154031}, {
             2.4534793246068016`, -0.05796353837481902}, {
             2.4580323404161906`, -0.05452462724620029}, {
             2.467138372034968, -0.047323688180869995`}, {
             2.4853504352725233`, -0.03185786618027973}, {
             2.4899034510819122`, -0.02781807286161047}, {
             2.494456466891301, -0.023725619262667023`}, {
             2.5035624985100786`, -0.015416015508270781`}, {2.521774561747634,
              0.0014716623668274247`}, {2.558198688222745, 
             0.03455771264507966}, {2.5627517040321335`, 
             0.03848528027384912}, {2.5673047198415224`, 
             0.04234404303797647}, {2.5764107514603003`, 
             0.049830520819169534`}, {2.5809637672696892`, 
             0.05344647189399136}, {2.585516783079078, 0.05697010261424991}, {
             2.5941802750778242`, 0.06339142654707257}}], 
            
            Line[{{16.232235760923256`, -0.06177979764424375}, {
             16.236289798632093`, -0.019047859939758122`}, {
             16.238976816990736`, -0.06177979764424375}}], 
            
            Line[{{16.19225232680366, -0.06177979764424375}, {
             16.196023092412517`, -0.014317189805491905`}, {
             16.201056430689963`, 0.05179602311209891}, {16.20606385120417, 
             0.06339142654707257}}], 
            
            Line[{{16.349270646832643`, 0.06339142654707257}, {
             16.352056579013375`, 0.04403668924184021}, {16.35708991729082, 
             0.040652142769553354`}, {16.362123255568267`, 
             0.03428864785572404}, {
             16.367156593845714`, -0.027793852694844325`}, {16.36964842692349,
              0.06339142654707257}}], 
            
            Line[{{16.333756353728916`, -0.06177979764424375}, {
             16.336956564181033`, 0.013282947047277876`}, {16.34198990245848, 
             0.027240476481498185`}, {16.345505060248747`, 
             0.06339142654707257}}], 
            
            Line[{{16.247761373879612`, 0.06339142654707257}, {
             16.251389813464435`, -0.0468761430682193}, {16.25642315174188, 
             0.022284055544841135`}, {16.257799343108, 0.06339142654707257}}], 
            
            Line[{{16.406476538716067`, -0.06177979764424375}, {
             16.40742330006529, -0.0222570351947629}, {16.410202426796847`, 
             0.06339142654707257}}], 
            
            Line[{{16.183297751868285`, 0.06339142654707257}, {
             16.185956415857625`, 0.04261310013717964}, {
             16.19032475133516, -0.06177979764424375}}], 
            
            Line[{{16.264320693131562`, 0.06339142654707257}, {
             16.266489828296777`, -0.01933915615199493}, {16.271523166574223`,
              0.030051272518909246`}, {16.273027055649877`, 
             0.06339142654707257}}], 
            
            Line[{{16.216975101164856`, 0.06339142654707257}, {
             16.22118978379975, -0.05635876187810349}, {16.2262231220772, 
             0.0526528091787093}, {
             16.230839994947154`, -0.06177979764424375}}], 
            
            Line[{{16.305884154027016`, -0.06177979764424375}, {
             16.306756534516353`, -0.030389865402405736`}, {
             16.307641603380358`, -0.06177979764424375}}], 
            
            Line[{{16.31953516607766, -0.06177979764424375}, {
             16.32185654934869, 0.0025521656892531566`}, {16.323958829062832`,
              0.06339142654707257}}], 
            
            Line[{{16.431139351664292`, 0.06339142654707257}, {
             16.432589991452527`, 0.031006167171334746`}, {16.43339807474901, 
             0.06339142654707257}}], 
            
            Line[{{16.399410632731865`, 0.06339142654707257}, {
             16.400671514330455`, -0.06177979764424375}}], 
            
            Line[{{16.379424552660712`, 0.06339142654707257}, {
             16.381369439506123`, -0.06177979764424375}}], 
            
            Line[{{16.299166596659752`, 0.06339142654707257}, {
             16.30033074270517, -0.06177979764424375}}], 
            
            Line[{{16.458136062168307`, 0.06339142654707257}, {
             16.45953724514148, -0.06177979764424375}}], 
            
            Line[{{16.328577478091454`, 0.06339142654707257}, {
             16.33106778938076, -0.06177979764424375}}], 
            
            Line[{{16.38911655468975, 0.06339142654707257}, {
             16.390556108474108`, -0.06177979764424375}}], 
            
            Line[{{16.242238495224854`, -0.06177979764424375}, {
             16.245309117884073`, 0.06339142654707257}}], 
            
            Line[{{16.424642152543655`, -0.06177979764424375}, {
             16.426420383012324`, 0.06339142654707257}}], 
            
            Line[{{16.38309916252022, -0.06177979764424375}, {
             16.384946241900366`, 0.06339142654707257}}], 
            
            Line[{{16.465724795238643`, -0.06177979764424375}, {
             16.466988994052134`, 0.06339142654707257}}], 
            
            Line[{{16.413496247783925`, 0.06339142654707257}, {
             16.415369381706007`, -0.06177979764424375}}], 
            
            Line[{{16.393925431583266`, -0.06177979764424375}, {
             16.395230550513872`, 0.06339142654707257}}]}, 
           "Charting`Private`Tag#1"]}}, {}}, <|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{1.8125679368766023`, 
           16.477890335241838`}, {-0.06177979764424375, 0.06339142654707257}},
           "Frame" -> {{False, False}, {False, False}}, 
          "AxesOrigin" -> {1.8125679368766063`, 0}, 
          "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
          "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          Plot, "GroupHighlight" -> False|>|>]]& )[<|
      "HighlightElements" -> <|
        "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
       "LayoutOptions" -> <|
        "PlotRange" -> {{1.8125679368766023`, 
          16.477890335241838`}, {-0.06177979764424375, 0.06339142654707257}}, 
         "Frame" -> {{False, False}, {False, False}}, 
         "AxesOrigin" -> {1.8125679368766063`, 0}, 
         "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
         "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
         "DefaultStyle" -> {
           Directive[
            Opacity[1.], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[2]]}, 
         "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), 
           "ScalingFunctions" -> {{Identity, Identity}, {
             Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
       "Meta" -> <|
        "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
         Plot, "GroupHighlight" -> False|>|>],
     ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
      4.503599627370496*^15, -4.503599627370496*^15}}]},
   Annotation[{{{{}, {}, 
       Annotation[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1:eJwBYQOe/CFib1JlAgAAADUAAAACAAAALtIBjUcA/T9CdRyLGSGSP+s6ztqz
Ev0/NLYlmvoJkz+oo5ooICX9PxJo1ayiepM/ZQxndow3/T9gSdsIL2+TPyJ1
M8T4Sf0/8pyepuzmkj/f3f8RZVz9P1l+FV4a5JE/nEbMX9Fu/T/aPF6bn2uQ
P1mvmK09gf0/JzbLu3YJjT8WGGX7qZP9P8o4v4RdcYg/04AxSRam/T9LDiKy
yySDP5Dp/ZaCuP0/vH8lSYR4ej8Ku5YyW939PwAMue7JatU+/13IaQwn/j+T
E3DWTvWMv7zGlLd4Of4/9ObGo3QKkr96L2EF5Uv+Py2R0aK3eZW/N5gtU1Fe
/j9wwlkKhryYv/QA+qC9cP4/5zZq8unHm7+xacbuKYP+PyZJMQX5kZ6/btKS
PJaV/j9S9NXo8oigvys7X4oCqP4/Y/mc3wWgob/ooyvYbrr+P4zokgn7iqK/
pQz4JdvM/j/1UmE+MUejv2J1xHNH3/4/ufvmzp/So78f3pDBs/H+P8rj2QHU
K6S/3EZdDyAE/z/G7MsB7VGkv5mvKV2MFv8/Gip8c5ZEpL9WGPaq+Cj/P5om
1ugBBKS/E4HC+GQ7/z9Z/hdi35Cjv9DpjkbRTf8/4g9tC1Xsor+NUluUPWD/
Pw5+9WH2F6K/Srsn4qly/z8MCcfnuhWhvwck9C8Whf8/xDsFFunPn7/EjMB9
gpf/P+70YcGLIp2/gfWMy+6p/z+WooWhMCmavz5eWRlbvP8/0hGtmiTqlr+4
L/K0M+H/P0LDKt04bI+/dZi+AqDz/z/Cn6sN4p6Hv5mARSgGAwBATMuc+0j+
fr9W6RF2chUAQBBzQL2yqkc/0LqqEUs6AEDuwrNhplaSPy7vkDiBQwBAavmJ
Reaylj+NI3dft0wAQPx9Mij7/Jo/SoxDrSNfAEBTux4gNqChP6jAKdRZaABA
ZkYO/rqWoz8H9Q/7j3EAQMqOjXLed6U/xF3cSPyDAEALx35Dq++oPyKSwm8y
jQBA5a1htqiBqj+BxqiWaJYAQMTjPujv9Ks/4PqOvZ6fAED7F4Xsr0etPz4v
deTUqABApHglYU54rj+dY1sLC7IAQL99055nha8//JdBMkG7AEB1fJdL5zaw
P0ozcV+WuwBAg9Ddp2s6sD9sI7GB
          "]], 
         Line[{{2.815581576888124, 0.06339142654707257}, {2.8199514906550975`,
           0.06055915271461443}, {2.828878898080629, 0.05458206081587464}, {
          2.846733712931692, 0.04197970759389683}, {2.8511974166444576`, 
          0.038718407971577155`}, {2.8556611203572233`, 
          0.03542119889546945}, {2.8645885277827547`, 
          0.028735787968699803`}, {2.8824433426338176`, 
          0.01511735912443864}, {2.918152972335944, -0.012203370944383913`}, {
          2.92261667604871, -0.01555053660765645}, {
          2.9270803797614757`, -0.018870298692053162`}, {
          2.936007787187007, -0.02541364122646707}, {
          2.95386260203807, -0.03802208220316233}, {
          2.9583263057508358`, -0.04105602229128478}, {
          2.9627900094636015`, -0.044036681059918655`}, {
          2.971717416889133, -0.0498268462608482}, {
          2.989572231740196, -0.060648679479429736`}, {
          2.9915678026653043`, -0.06177979764424375}}], 
         Line[CompressedData["
1:eJwBcQGO/iFib1JlAgAAABYAAAACAAAA/6JjdiMICkAa/d4EmqGvv17TSaP3
FQpAI25if2Xyrb8s06qbTGUKQCwdbAlJMqO/1VZg0I1uCkCduOtu5t+hv37a
FQXPdwpAN2cXXP6KoL/R4YBuUYoKQNZmMCK4tZu/dvBWQVavCkBQpMJk4dOQ
v8ENA+df+QpAPOxlGly5cz9qkbgboQILQEjJf3GpbH4/FBVuUOILC0CqD5Ke
L4eEP2Yc2blkHgtAfPKZCkIKjz8MK6+MaUMLQHR273uSvJk/VkhbMnONC0Aq
JySlZEmmPwDMEGe0lgtA5nf5kGlfpz+pT8ab9Z8LQFoe/XOWb6g//FYxBXiy
C0B8Cfdqs32qP6Xa5jm5uwtAlbiSRU17qz9OXpxu+sQLQHxT26xicqw/oWUH
2HzXC0DQkl8tZkyuP0rpvAy+4AtAJ7DpkAsvrz/0bHJB/+kLQFXMYY1NBbA/
xT6eV7XuC0CD0N2nazqwPxw1oX4=
          "]], 
         Line[CompressedData["
1:eJwB8QEO/iFib1JlAgAAAB4AAAACAAAAZ7uhaO3kDUCD0N2nazqwP+EPybuL
9g1AER1sr1ERrz90+l5LkwAOQMn1rVH3OK4/B+X02poKDkDQFWS/cVutPy26
IPqpHg5AAmj0IsCRqz95ZHg4yEYOQJK4/Erdyac/EbkntQSXDkAg+PaAFjSf
P0Fihq59Nw9AqNDAb6Q8a7/sBthqVkEPQJgVxQ+f9nW/mKspJy9LD0DEMSty
AEF+v+70zJ/gXg9AFpVGHBZTh7+chxORQ4YPQDah4zisopO/RyxlTRyQD0DJ
r6UNAZOVv/LQtgn1mQ9AwlCBSxp9l79JGlqCpq0PQFwocXNaPZu/9qygcwnV
D0D15sqH3zKhv6FR8i/i3g9AhI52HOwNor9M9kPsuugPQINe8Ze05KK/oz/n
ZGz8D0CQiOdm+YSkvyjpFqvnERBAhgvwbw+Np79+uz8J1BYQQEbhK/2wQqi/
041oZ8AbEEBaNTbrKvOov34yuiOZJRBAr6nUOEtEqr/Ve12cSjkQQPR5iWn0
pKy/Kk6G+jY+EEAdm1brBy+tv4Agr1gjQxBA1GNEElizrb8sxQAV/EwQQOaz
jzh2qq6/gpcpc+hREEDlTZgKKx2vv9dpUtHUVhBApwQGJuqJr78NewQpAFgQ
QBr93gSaoa+/j4XgRg==
          "]], 
         Line[CompressedData["
1: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
fg3MHW7b7YlrRIw4byYzoMlz9pmvtic+amcgqpLGAOHBm5FtRp74S8sR6rUM
Bnjsi0i/YO2JE1g1VenZDJDVeZdaypxvlAw1tMpzGVAZm2xt6OmJHxepnZS5
woC4+tdqgQGe2O3bdpu8QgZIx1nskA31xPwaiu7CJQw4dr69FCI9cXM8NTSl
jAFOUvx976I98clR2WTuSma+pF8XlmM88RJNojC6mgGvMjnLU5h2lq/wVZY6
BvSyWqxWRHlitV7erqCrDPhnTBjbG+6JXwlxDf5uYPpfjzw0DPbE/rYbRj2a
GWDDf/vgrI8nFm9em5lrZcAbbQ9TNjdP3Pnvv98ONxjwINJqe5mdJzY/trhx
sp0BN9w+8/Sd9sSrBXPCVl3MeMPNh70MPHHh12ny6G0GlHDb3a1FnvjA3nEV
47sM6HA8neKy3RN/iHtz8Ek3870pHb/TKeuJw169NNTtZQB/Wodl3hZP3O09
6AaDDFD/rIN4pzzwuZ77l7oeMcDITm+wdsgDswviRLUnDKAfob16f8MDaze2
1im9YECDxQcumUgPPLN2raN6hAELExHs2x08cJx+zQBplAGsMub/fTrqgR9+
LpgmvGdAhCVlvy6PB3ZVz/mV8ZHZb4OkDyxf3DFvbBo73yQDgvM2aDn1u2ND
Sgxp4ywD1A4PfjUPcccvrC5aLSww4O5o+aJ750Vsw/FCUHOJef+xJUKZ00U8
f029P/03A3KIMffvil7Em9ZYt6v+ZQBv1OXeGWc3rHElk9WPXRGGBD/NXfnr
iitedVSsiirCuo6026FeJ7wjVOa0gbgiOBcXDb01ccJ35CO3FEky7R9itW+n
HfFrH31fRFSEporG19psjniz8IcjEQqKsLfiXUQFzR57G7J/5dRQBA2yyoy/
qi1mXXYsNjugCCr6Bnl/m2xwcvFjo1pQhGP/a7DK46HsojAlaygRqWQJad55
37EkKe7JmiVbtoTGPmYwSLIvJUV2JQpJtIqoRMlVibRQktAmSl+SVEiSvvnz
/s7vnvPc5zznuUd9Gf8RwgufHy9osjSlwdDbYalGRSZ+naGRlWlDAyuPnw8i
/+7CJh02msu8aOBCFxjn6uzA0kZF+xRSaVDW4Znr1yGF3RfW3y07TAO+tisq
BqvaDc+0dourHKHBhPjqtTRNaaRlvrhCPYeHV3l2nJlI5+1/iU8ZJ2jApIkE
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
/zmwlmo=
          "]], 
         Line[{{16.111356365150133`, 0.06339142654707257}, {
          16.115175861042232`, -0.04925138380220791}, {16.1196848082812, 
          0.02892006997361677}, {16.124193755520167`, -0.02779012218600238}, {
          16.128702702759135`, 0.012500305029022845`}, {16.133211649998103`, 
          0.00930637875054108}, {16.13772059723707, 0.008497414546586491}, {
          16.142229544476038`, 0.04341279118147265}, {16.146738491715006`, 
          0.02245625811015257}, {16.151247438953973`, 
          0.035236038598393006`}, {16.15575638619294, -0.03616103867089301}, {
          16.160789724470387`, 0.009586423977558302}, {16.165823062747833`, 
          0.027766220180855013`}, {16.170856401025283`, 0.0360480900232724}, {
          16.17588973930273, 0.01291183295381257}, {16.17957002005358, 
          0.06339142654707257}}], 
         Line[CompressedData["
1:eJwBQQG+/iFib1JlAgAAABMAAAACAAAA25aDwysgAUCD0N2nazqwP0J2CRCO
JwFAU/2Ek9fGrz+KEdCRijEBQHGPyxSUsq4/0qyWE4c7AUACS+Hk8natPxtI
XZWDRQFA6up2vq8VrD9k4yMXgE8BQBqpoSirkKo/rH7qmHxZAUCcvl7P5umo
Pzy1d5x1bQFAfhBmabU/pT+EUD4ecncBQPDkz9LQQKM/zOsEoG6BAUAHsQlV
NimhP10ikqNnlQFAmEuZeWRzmT9+j6yqWb0BQEDHf20PAXk/wGnhuD0NAkAU
ZxsC3sigvwgFqDo6FwJAcjBO1Vsoo79QoG68NiECQJi33QP8eaW/4db7vy81
AkAC1Ngs4OupvypywkEsPwJAHrYs034IrL9yDYnDKEkCQBIIkxn3D66/a3nu
Wm9RAkAa/d4EmqGvv/bBhqs=
          "]], 
         Line[{{2.4482047058790046`, -0.06177979764424375}, {
          2.4489263087974127`, -0.06128411639154031}, {
          2.4534793246068016`, -0.05796353837481902}, {
          2.4580323404161906`, -0.05452462724620029}, {
          2.467138372034968, -0.047323688180869995`}, {
          2.4853504352725233`, -0.03185786618027973}, {
          2.4899034510819122`, -0.02781807286161047}, {
          2.494456466891301, -0.023725619262667023`}, {
          2.5035624985100786`, -0.015416015508270781`}, {2.521774561747634, 
          0.0014716623668274247`}, {2.558198688222745, 0.03455771264507966}, {
          2.5627517040321335`, 0.03848528027384912}, {2.5673047198415224`, 
          0.04234404303797647}, {2.5764107514603003`, 
          0.049830520819169534`}, {2.5809637672696892`, 
          0.05344647189399136}, {2.585516783079078, 0.05697010261424991}, {
          2.5941802750778242`, 0.06339142654707257}}], 
         Line[{{16.232235760923256`, -0.06177979764424375}, {
          16.236289798632093`, -0.019047859939758122`}, {
          16.238976816990736`, -0.06177979764424375}}], 
         Line[{{16.19225232680366, -0.06177979764424375}, {
          16.196023092412517`, -0.014317189805491905`}, {16.201056430689963`, 
          0.05179602311209891}, {16.20606385120417, 0.06339142654707257}}], 
         Line[{{16.349270646832643`, 0.06339142654707257}, {
          16.352056579013375`, 0.04403668924184021}, {16.35708991729082, 
          0.040652142769553354`}, {16.362123255568267`, 
          0.03428864785572404}, {
          16.367156593845714`, -0.027793852694844325`}, {16.36964842692349, 
          0.06339142654707257}}], 
         Line[{{16.333756353728916`, -0.06177979764424375}, {
          16.336956564181033`, 0.013282947047277876`}, {16.34198990245848, 
          0.027240476481498185`}, {16.345505060248747`, 
          0.06339142654707257}}], 
         Line[{{16.247761373879612`, 0.06339142654707257}, {
          16.251389813464435`, -0.0468761430682193}, {16.25642315174188, 
          0.022284055544841135`}, {16.257799343108, 0.06339142654707257}}], 
         Line[{{16.406476538716067`, -0.06177979764424375}, {
          16.40742330006529, -0.0222570351947629}, {16.410202426796847`, 
          0.06339142654707257}}], 
         Line[{{16.183297751868285`, 0.06339142654707257}, {
          16.185956415857625`, 0.04261310013717964}, {
          16.19032475133516, -0.06177979764424375}}], 
         Line[{{16.264320693131562`, 0.06339142654707257}, {
          16.266489828296777`, -0.01933915615199493}, {16.271523166574223`, 
          0.030051272518909246`}, {16.273027055649877`, 
          0.06339142654707257}}], 
         Line[{{16.216975101164856`, 0.06339142654707257}, {
          16.22118978379975, -0.05635876187810349}, {16.2262231220772, 
          0.0526528091787093}, {16.230839994947154`, -0.06177979764424375}}], 
         
         Line[{{16.305884154027016`, -0.06177979764424375}, {
          16.306756534516353`, -0.030389865402405736`}, {
          16.307641603380358`, -0.06177979764424375}}], 
         Line[{{16.31953516607766, -0.06177979764424375}, {16.32185654934869, 
          0.0025521656892531566`}, {16.323958829062832`, 
          0.06339142654707257}}], 
         Line[{{16.431139351664292`, 0.06339142654707257}, {
          16.432589991452527`, 0.031006167171334746`}, {16.43339807474901, 
          0.06339142654707257}}], 
         Line[{{16.399410632731865`, 0.06339142654707257}, {
          16.400671514330455`, -0.06177979764424375}}], 
         Line[{{16.379424552660712`, 0.06339142654707257}, {
          16.381369439506123`, -0.06177979764424375}}], 
         Line[{{16.299166596659752`, 0.06339142654707257}, {
          16.30033074270517, -0.06177979764424375}}], 
         Line[{{16.458136062168307`, 0.06339142654707257}, {
          16.45953724514148, -0.06177979764424375}}], 
         Line[{{16.328577478091454`, 0.06339142654707257}, {
          16.33106778938076, -0.06177979764424375}}], 
         Line[{{16.38911655468975, 0.06339142654707257}, {
          16.390556108474108`, -0.06177979764424375}}], 
         Line[{{16.242238495224854`, -0.06177979764424375}, {
          16.245309117884073`, 0.06339142654707257}}], 
         Line[{{16.424642152543655`, -0.06177979764424375}, {
          16.426420383012324`, 0.06339142654707257}}], 
         Line[{{16.38309916252022, -0.06177979764424375}, {
          16.384946241900366`, 0.06339142654707257}}], 
         Line[{{16.465724795238643`, -0.06177979764424375}, {
          16.466988994052134`, 0.06339142654707257}}], 
         Line[{{16.413496247783925`, 0.06339142654707257}, {
          16.415369381706007`, -0.06177979764424375}}], 
         Line[{{16.393925431583266`, -0.06177979764424375}, {
          16.395230550513872`, 0.06339142654707257}}]}, 
        "Charting`Private`Tag#1"]}}, {}}, <|
    "HighlightElements" -> <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
     "LayoutOptions" -> <|
      "PlotRange" -> {{1.8125679368766023`, 
        16.477890335241838`}, {-0.06177979764424375, 0.06339142654707257}}, 
       "Frame" -> {{False, False}, {False, False}}, 
       "AxesOrigin" -> {1.8125679368766063`, 0}, 
       "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
       "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]]}, 
       "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), 
         "ScalingFunctions" -> {{Identity, Identity}, {Identity, Identity}}|>,
        "Primitives" -> {}, "GCFlag" -> False|>, 
     "Meta" -> <|
      "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
       Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{1.8125679368766063`, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{1.8125679368766023`, 
   16.477890335241838`}, {-0.06177979764424375, 0.06339142654707257}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.9231301929765263`*^9, 3.923130201863366*^9}, 
   3.923130552773584*^9, {3.923131228409257*^9, 3.92313124684941*^9}, 
   3.9231315053395*^9, {3.923131646668393*^9, 3.923131675161833*^9}, {
   3.923131749118668*^9, 3.923131758779448*^9}, 3.9231318924648533`*^9},
 CellLabel->
  "Out[202]=",ExpressionUUID->"9a600c29-64e6-45c2-8afd-37eaf1f9833c"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.922187029979148*^9, 3.922187038787467*^9}, {
   3.9221871709048033`*^9, 3.922187274662547*^9}, {3.922187334119431*^9, 
   3.9221873692182617`*^9}, {3.9221874084431963`*^9, 3.922187454980914*^9}, {
   3.922187502696156*^9, 3.922187506906478*^9}, {3.923130384990591*^9, 
   3.9231304131958103`*^9}, 
   3.923130964017562*^9},ExpressionUUID->"1dcacd36-e083-443e-b122-\
0c1a9183198d"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{2857.5, 1597.5},
WindowMargins->{{11.25, Automatic}, {Automatic, 11.25}},
Magnification:>1.5 Inherited,
FrontEndVersion->"13.3 for Linux x86 (64-bit) (July 24, 2023)",
StyleDefinitions->"ReverseColor.nb",
ExpressionUUID->"ee2c1813-3e53-4c3d-a522-0a00d203b51d"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 726, 13, 77, "Text",ExpressionUUID->"88c38988-f73d-4a8a-9232-dd759baad4fc"],
Cell[1287, 35, 1190, 26, 252, "Input",ExpressionUUID->"a7621c5e-04f6-44df-becc-cf76a5d1ef2d",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[2502, 65, 171, 3, 100, "Section",ExpressionUUID->"728999bc-eba0-4fe4-825f-f7bb13e2ecee"],
Cell[2676, 70, 8301, 249, 1113, "Input",ExpressionUUID->"7a2f0ff3-925d-4309-99b5-504153ab1216",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[11014, 324, 232, 4, 100, "Section",ExpressionUUID->"8d90ebca-ce7c-4a19-a808-a68fddc57939"],
Cell[11249, 330, 3053, 84, 160, "Input",ExpressionUUID->"5a254cd5-ac6e-4774-8b69-b59410b56597",
 InitializationCell->True],
Cell[14305, 416, 13832, 394, 571, "Input",ExpressionUUID->"2b6c9d5d-8473-4ad0-af25-0ee291f4afd6",
 InitializationCell->True],
Cell[28140, 812, 6015, 161, 191, "Input",ExpressionUUID->"43c4754d-edc8-43cb-9f04-230ab45964a3",
 InitializationCell->True],
Cell[34158, 975, 6076, 164, 191, "Input",ExpressionUUID->"adfbbea7-fc01-4df2-aff1-e2a6ebbbdeeb",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[40259, 1143, 610, 16, 99, "Input",ExpressionUUID->"cee8d1a7-d561-46f5-9937-0dee134b4e03",
 InitializationCell->True],
Cell[40872, 1161, 673, 11, 50, "Output",ExpressionUUID->"ef1395e2-cfab-4ff4-b441-810ded8336d9"],
Cell[41548, 1174, 673, 11, 50, "Output",ExpressionUUID->"c1472942-d76a-407a-abfd-0f60b3243e02"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[42270, 1191, 201, 3, 100, "Section",ExpressionUUID->"e3ff47f1-3bbc-4f5c-90cc-51052f9ec997"],
Cell[42474, 1196, 1797, 56, 376, "Input",ExpressionUUID->"4993cea6-09dd-4ec2-9e5a-f95605bfbc05"],
Cell[CellGroupData[{
Cell[44296, 1256, 160, 3, 81, "Subsection",ExpressionUUID->"f5a6a130-b1b1-4da7-a43a-5fcd3926b30a"],
Cell[CellGroupData[{
Cell[44481, 1263, 7358, 190, 610, "Input",ExpressionUUID->"334fd8e4-1ce8-4296-b3e7-49676695613a"],
Cell[51842, 1455, 202, 3, 50, "Output",ExpressionUUID->"320a7951-5d38-4c81-8bd2-38e50d3b8e36"],
Cell[52047, 1460, 201, 3, 50, "Output",ExpressionUUID->"b8f8c13c-7477-4f96-addb-c0ed3ae298c2"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[52297, 1469, 160, 3, 81, "Subsection",ExpressionUUID->"81e986f3-1827-482b-94af-fa086595d386"],
Cell[CellGroupData[{
Cell[52482, 1476, 18111, 491, 1694, "Input",ExpressionUUID->"ced88f6d-2a34-43b6-9c7a-e3c2d23fc316"],
Cell[70596, 1969, 205, 3, 50, "Output",ExpressionUUID->"9eff1d19-02d4-451c-a362-95b5ea557974"],
Cell[70804, 1974, 204, 3, 50, "Output",ExpressionUUID->"a094a49d-21ab-482f-a905-2bbd66e4572d"],
Cell[71011, 1979, 205, 3, 50, "Output",ExpressionUUID->"5c6f0519-9748-4edc-8203-4670d05df775"],
Cell[71219, 1984, 205, 3, 50, "Output",ExpressionUUID->"3bd30e8c-5b91-46a5-80a5-b593468618c7"]
}, Open  ]],
Cell[71439, 1990, 231, 3, 44, "Input",ExpressionUUID->"a735f1ad-32c2-4b45-b1f5-4553ae6f581f"],
Cell[CellGroupData[{
Cell[71695, 1997, 10109, 269, 1106, "Input",ExpressionUUID->"43c15ab5-ad57-4bdc-a66e-2f51d3eb9c10"],
Cell[81807, 2268, 125526, 2142, 339, "Output",ExpressionUUID->"9a600c29-64e6-45c2-8afd-37eaf1f9833c"]
}, Open  ]],
Cell[207348, 4413, 429, 7, 44, "Input",ExpressionUUID->"1dcacd36-e083-443e-b122-0c1a9183198d"]
}, Open  ]]
}, Open  ]]
}
]
*)

